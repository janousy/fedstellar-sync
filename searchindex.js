Search.setIndex({"docnames": ["app", "app.main", "fedstellar", "fedstellar.base_node", "fedstellar.command", "fedstellar.communication_protocol", "fedstellar.config", "fedstellar.config.config", "fedstellar.config.mender", "fedstellar.controller", "fedstellar.encrypter", "fedstellar.gossiper", "fedstellar.heartbeater", "fedstellar.learning", "fedstellar.learning.aggregators", "fedstellar.learning.aggregators.aggregator", "fedstellar.learning.aggregators.fedavg", "fedstellar.learning.exceptions", "fedstellar.learning.learner", "fedstellar.learning.pytorch", "fedstellar.learning.pytorch.lightninglearner", "fedstellar.learning.pytorch.mnist_examples", "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm", "fedstellar.learning.pytorch.mnist_examples.models", "fedstellar.learning.pytorch.mnist_examples.models.cnn", "fedstellar.learning.pytorch.mnist_examples.models.mlp", "fedstellar.node", "fedstellar.node_connection", "fedstellar.node_start", "fedstellar.role", "fedstellar.single-device", "fedstellar.utils", "fedstellar.utils.env", "fedstellar.utils.observer", "fedstellar.utils.topologymanager", "index", "modules", "test", "test.basenode_test", "test.controller_test", "test.encryption_test", "test.learning_test", "test.node_test", "test.participants_test", "test.topologymanager_test", "test.utils"], "filenames": ["app.rst", "app.main.rst", "fedstellar.rst", "fedstellar.base_node.rst", "fedstellar.command.rst", "fedstellar.communication_protocol.rst", "fedstellar.config.rst", "fedstellar.config.config.rst", "fedstellar.config.mender.rst", "fedstellar.controller.rst", "fedstellar.encrypter.rst", "fedstellar.gossiper.rst", "fedstellar.heartbeater.rst", "fedstellar.learning.rst", "fedstellar.learning.aggregators.rst", "fedstellar.learning.aggregators.aggregator.rst", "fedstellar.learning.aggregators.fedavg.rst", "fedstellar.learning.exceptions.rst", "fedstellar.learning.learner.rst", "fedstellar.learning.pytorch.rst", "fedstellar.learning.pytorch.lightninglearner.rst", "fedstellar.learning.pytorch.mnist_examples.rst", "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.rst", "fedstellar.learning.pytorch.mnist_examples.models.rst", "fedstellar.learning.pytorch.mnist_examples.models.cnn.rst", "fedstellar.learning.pytorch.mnist_examples.models.mlp.rst", "fedstellar.node.rst", "fedstellar.node_connection.rst", "fedstellar.node_start.rst", "fedstellar.role.rst", "fedstellar.single-device.rst", "fedstellar.utils.rst", "fedstellar.utils.env.rst", "fedstellar.utils.observer.rst", "fedstellar.utils.topologymanager.rst", "index.rst", "modules.rst", "test.rst", "test.basenode_test.rst", "test.controller_test.rst", "test.encryption_test.rst", "test.learning_test.rst", "test.node_test.rst", "test.participants_test.rst", "test.topologymanager_test.rst", "test.utils.rst"], "titles": ["app package", "app.main module", "fedstellar package", "fedstellar.base_node module", "fedstellar.command module", "fedstellar.communication_protocol module", "fedstellar.config package", "fedstellar.config.config module", "fedstellar.config.mender module", "fedstellar.controller module", "fedstellar.encrypter module", "fedstellar.gossiper module", "fedstellar.heartbeater module", "fedstellar.learning package", "fedstellar.learning.aggregators package", "fedstellar.learning.aggregators.aggregator module", "fedstellar.learning.aggregators.fedavg module", "fedstellar.learning.exceptions module", "fedstellar.learning.learner module", "fedstellar.learning.pytorch package", "fedstellar.learning.pytorch.lightninglearner module", "fedstellar.learning.pytorch.mnist_examples package", "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm module", "fedstellar.learning.pytorch.mnist_examples.models package", "fedstellar.learning.pytorch.mnist_examples.models.cnn module", "fedstellar.learning.pytorch.mnist_examples.models.mlp module", "fedstellar.node module", "fedstellar.node_connection module", "fedstellar.node_start module", "fedstellar.role module", "fedstellar.single-device module", "fedstellar.utils package", "fedstellar.utils.env module", "fedstellar.utils.observer module", "fedstellar.utils.topologymanager module", "&lt;no title&gt;", "fedstellar", "test package", "test.basenode_test module", "test.controller_test module", "test.encryption_test module", "test.learning_test module", "test.node_test module", "test.participants_test module", "test.topologymanager_test module", "test.utils module"], "terms": {"main": [0, 2, 3, 11, 27, 28, 36], "config": [2, 3, 5, 11, 12, 15, 16, 26, 27, 36, 43], "mender": [2, 6], "learn": [2, 5, 26, 33, 35, 36], "aggreg": [2, 5, 13, 26, 27, 29, 33], "pytorch": [2, 13, 26], "except": [2, 5, 13], "decodingparamserror": [2, 13, 17, 18, 20], "modelnotmatchingerror": [2, 13, 17, 18, 20], "learner": [2, 13, 20, 26], "nodelearn": [2, 13, 18, 20, 26], "util": [2, 36, 37], "env": [2, 31], "collect_env": [2, 31, 32], "observ": [2, 3, 11, 12, 15, 26, 27, 31], "event": [2, 3, 26, 31, 33], "topologymanag": [2, 31], "base_nod": [2, 36], "basenod": [2, 3, 26, 36], "host": [2, 3, 26, 33], "port": [2, 3, 5, 26, 27, 33], "simul": [2, 3, 26], "heartbeat": [2, 3, 27, 36], "gossip": [2, 3, 5, 33, 36], "broadcast": [2, 3, 5], "connect_to": [2, 3, 5, 26], "disconnect_from": [2, 3], "get_addr": [2, 3, 27], "get_nam": [2, 3, 27], "get_name_demo": [2, 3], "get_neighbor": [2, 3, 31, 34], "get_neighbors_nam": [2, 3], "get_network_nod": [2, 3], "rm_neighbor": [2, 3], "run": [2, 3, 11, 12, 14, 15, 26, 27], "setup_log": [2, 3], "start": [2, 3, 5, 15, 26, 27, 33], "stop": [2, 3, 4, 5, 11, 12, 26, 27, 33], "updat": [2, 3, 12, 26, 31, 33], "command": [2, 27, 36], "beat_cmd": [2, 4, 36], "execut": [2, 3, 4, 5], "conn_to_cmd": [2, 4, 36], "metrics_cmd": [2, 4, 36], "model_initialized_cmd": [2, 4, 36], "models_ready_cmd": [2, 4, 36], "models_aggregated_cmd": [2, 4, 36], "params_cmd": [2, 4, 36], "role_cmd": [2, 4, 36], "start_learning_cmd": [2, 4, 36], "stop_cmd": [2, 4, 36], "stop_learning_cmd": [2, 4, 36], "transfer_leadership_cmd": [2, 4, 36], "vote_train_set_cmd": [2, 4, 36], "communication_protocol": [2, 36], "communicationprotocol": [2, 3, 5, 27, 36], "command_dict": [2, 5], "last_messag": [2, 5], "beat": [2, 4, 5, 12, 33], "conn": [2, 5], "conn_to": [2, 4, 5, 27], "metric": [2, 3, 4, 5, 18, 20, 26, 27, 33], "models_aggreg": [2, 4, 5], "models_aggregated_clos": [2, 5], "models_readi": [2, 5], "model_initi": [2, 4, 5], "param": [2, 4, 5, 18, 20, 27, 33], "params_clos": [2, 5], "role": [2, 4, 5, 12, 27, 33, 36], "start_learn": [2, 4, 5], "stop_learn": [2, 4, 5], "transfer_leadership": [2, 4, 5], "vote_train_set": [2, 5], "vote_train_set_clos": [2, 5], "add_processed_messag": [2, 5, 27], "build_beat_msg": [2, 5], "build_connect_msg": [2, 5], "build_connect_to_msg": [2, 5], "build_metrics_msg": [2, 5], "build_model_initialized_msg": [2, 5], "build_models_aggregated_msg": [2, 5], "build_models_ready_msg": [2, 5], "build_params_msg": [2, 5], "build_role_msg": [2, 5], "build_start_learning_msg": [2, 5], "build_stop_learning_msg": [2, 5], "build_stop_msg": [2, 5], "build_transfer_leadership_msg": [2, 5], "build_vote_train_set_msg": [2, 5], "check_collaps": [2, 5], "check_params_incomplet": [2, 5], "generate_hased_messag": [2, 5], "process_connect": [2, 5], "process_messag": [2, 5], "control": [2, 26, 33, 36], "encrypt": [2, 3, 26, 36], "aesciph": [2, 10, 36], "add_pad": [2, 10], "decrypt": [2, 10], "get_block_s": [2, 10], "get_kei": [2, 10], "key_len": [2, 10], "rsaciph": [2, 10, 36], "load_pair_public_kei": [2, 10], "add_messag": [2, 11], "add_nod": [2, 12, 31, 34], "add_node_rol": [2, 12], "clear_nod": [2, 12], "get_nod": [2, 12, 31, 34], "update_config_with_neighbor": [2, 12], "node": [2, 3, 4, 5, 10, 11, 12, 15, 16, 18, 20, 27, 33, 34, 36, 45], "round": [2, 4, 5, 18, 20, 26, 27, 33], "totalround": [2, 26], "add_model": [2, 14, 15, 26], "set_data": [2, 13, 18, 19, 20, 26], "set_model": [2, 13, 18, 19, 20, 26], "set_start_learn": [2, 26], "set_stop_learn": [2, 26], "node_connect": [2, 4, 36], "nodeconnect": [2, 3, 27, 33, 36], "add_models_aggreg": [2, 27], "add_param_seg": [2, 27], "clear_buff": [2, 27], "clear_models_aggreg": [2, 27], "get_model_initi": [2, 27], "get_model_ready_statu": [2, 27], "get_models_aggreg": [2, 27], "get_param": [2, 27], "notify_conn_to": [2, 27], "notify_heartbeat": [2, 27], "notify_metr": [2, 27], "notify_param": [2, 27], "notify_rol": [2, 27], "notify_start_learn": [2, 27], "notify_stop_learn": [2, 27], "notify_train_set_vot": [2, 27], "send": [2, 5, 11, 12, 27, 33], "set_model_initi": [2, 27], "set_model_ready_statu": [2, 27], "set_transfer_leadership": [2, 27], "node_start": [2, 36], "idl": [2, 29], "proxi": [2, 29], "server": [2, 29], "trainer": [2, 18, 20, 29], "singl": [2, 27, 36], "devic": [2, 8, 36], "class": [3, 4, 5, 7, 8, 10, 11, 12, 15, 16, 18, 20, 26, 27, 29, 33, 34], "experiment_nam": [3, 26, 34], "hostdemo": [3, 26], "none": [3, 7, 10, 15, 16, 18, 20, 26, 27, 33, 34], "127": [3, 26], "0": [3, 5, 26], "1": [3, 10, 26], "fals": [3, 5, 12, 15, 26, 27, 34], "sourc": [3, 4, 5, 7, 8, 10, 11, 12, 15, 16, 17, 18, 20, 26, 27, 28, 29, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45], "base": [3, 4, 5, 7, 8, 10, 11, 12, 15, 16, 17, 18, 20, 26, 27, 29, 33, 34], "thread": [3, 11, 12, 15, 27], "thi": [3, 5, 10, 26, 27, 29], "repres": [3, 4, 27, 33], "network": [3, 5, 26, 27], "without": [3, 27], "fl": 3, "It": [3, 11, 12, 15, 18, 20, 27, 35], "i": [3, 4, 5, 10, 12, 15, 18, 20, 26, 27, 33, 35], "so": [3, 10, 15, 27], "": [3, 27], "go": [3, 4, 27], "process": [3, 5, 15, 18, 20, 26, 27, 33, 35], "all": [3, 5, 12, 15, 27, 33], "messag": [3, 4, 5, 10, 11, 12, 27, 33], "background": [3, 15, 27], "us": [3, 5, 10, 12, 15, 18, 20, 26, 27, 33, 35], "paramet": [3, 4, 5, 10, 11, 12, 15, 16, 17, 18, 20, 26, 27, 33], "str": [3, 8, 10, 11, 15, 26], "The": [3, 4, 5, 10, 15, 18, 20, 26, 27, 33, 35], "int": [3, 10, 26], "bool": [3, 26], "If": [3, 5, 15, 18, 20, 26, 27], "commun": [3, 5, 11, 12, 26, 27], "type": [3, 5, 10, 15, 26, 33], "mode": 3, "basic": 3, "don": 3, "t": [3, 10, 12, 15, 26], "have": [3, 15, 27], "aren": 3, "sent": [3, 5, 11, 12, 27, 33], "msg": [3, 4, 5, 10, 11, 27, 33], "exc": 3, "thread_saf": 3, "true": [3, 5, 15, 18, 20, 26, 27, 34], "neighbor": [3, 11, 12, 34], "list": [3, 5, 8, 11, 12, 15, 27, 33], "exclud": [3, 15], "access": 3, "safe": 3, "h": [3, 4, 26, 27], "p": [3, 4, 26, 27], "full": [3, 5, 26], "forc": [3, 5, 15, 26, 27, 33], "connect": [3, 4, 5, 26, 27, 33], "anoth": [3, 26, 33], "entir": [3, 5, 26], "even": [3, 15, 26, 27], "though": [3, 26], "should": [3, 4, 5, 26, 27], "return": [3, 5, 10, 12, 15, 18, 20, 26, 27, 33], "ha": [3, 26, 27, 33], "been": [3, 15, 26, 27, 33], "disconnect": 3, "from": [3, 5, 11, 12], "address": [3, 5, 27], "tupl": [3, 5], "name": [3, 11, 12, 15, 18, 20, 26, 27], "get": [3, 10, 15, 18, 20], "n": [3, 33, 42], "remov": [3, 5], "loop": [3, 11, 27], "when": [3, 5, 15, 17, 26, 27, 33], "method": [3, 5, 10, 15, 26], "being": 3, "listen": [3, 26], "new": [3, 15, 26, 27], "them": [3, 27], "log_dir": [3, 34], "too": 3, "note": [3, 26], "an": [3, 5, 10, 15, 17, 33], "instanc": [3, 26], "can": [3, 5, 10, 18, 20, 26, 27, 33], "onli": [3, 5, 26], "onc": 3, "obj": [3, 26, 33], "handl": [3, 26], "occur": [3, 26], "differ": [3, 5, 12, 26, 33], "compon": [3, 26], "inform": 3, "about": 3, "chang": 3, "implement": [4, 18, 33], "pattern": [4, 11, 12, 33], "respons": 4, "node1": 4, "object": [4, 5, 7, 8, 10, 18, 26, 29, 33, 34], "arg": [4, 33], "loss": [4, 5, 18, 20, 27, 33], "readi": [4, 5, 27], "node_list": 4, "done": [4, 15, 33], "epoch": [4, 5, 18, 20, 26, 33], "vote": [4, 5, 27, 33], "manag": [5, 15, 35], "mean": [5, 10], "some": 5, "contain": [5, 26], "hash": 5, "end": [5, 18, 20], "uniqu": 5, "identifi": 5, "kind": [5, 27], "ar": [5, 11, 18, 20, 26, 27, 33], "valid": [5, 18, 20], "classifi": 5, "non": [5, 18, 20, 27], "punct": 5, "over": 5, "2": [5, 27], "ip": [5, 27], "data": [5, 18, 20, 26, 27, 35], "furthermor": 5, "consist": 5, "encod": [5, 10, 18, 20, 26, 33], "text": [5, 10, 27], "utf": [5, 10], "8": [5, 10], "which": [5, 12], "serial": [5, 10], "binari": [5, 18, 20, 27], "static": [5, 8, 10, 34], "build": 5, "handshak": 5, "dictionari": [5, 16], "callback": 5, "last": [5, 27], "receiv": [5, 12, 26, 27, 33], "header": 5, "train": [5, 18, 20], "set": [5, 18, 20, 26, 27, 35], "model": [5, 15, 16, 17, 18, 20, 21, 26, 27, 33, 35], "close": [5, 13, 18, 19, 20, 27, 33], "initi": [5, 27], "add": [5, 10, 11, 12, 15, 26, 27, 33], "ammount": 5, "higher": 5, "than": 5, "amount_last_messages_sav": 5, "oldest": 5, "keep": [5, 10, 27], "size": 5, "Not": 5, "special": 5, "case": [5, 10], "tri": [5, 27], "whether": 5, "were": [5, 15], "calcul": 5, "inici": 5, "string": [5, 15], "indic": [5, 15], "finish": 5, "block_siz": [5, 10], "A": [5, 35], "fragment": 5, "number": [5, 15, 18, 20, 26], "leadership": [5, 27], "transfer": [5, 27], "check": [5, 15, 18, 20, 33], "collaps": 5, "fill": [5, 10], "buffer": [5, 27], "befor": 5, "actual": [5, 12, 18, 20], "happen": 5, "length": [5, 10], "byte": [5, 10], "headear": 5, "incomplet": 5, "complet": 5, "need": 5, "given": 5, "gener": 5, "accept": 5, "what": 5, "do": [5, 17], "legit": 5, "wa": [5, 15, 27, 33], "otherwis": [5, 26, 27], "associ": 5, "messages_execut": 5, "error": 5, "add_participant_config": [6, 7], "get_participant_config": [6, 7], "get_topology_config": [6, 7], "particip": [6, 7, 15, 26, 29, 33, 34], "participants_path": [6, 7], "set_participant_config": [6, 7], "set_participants_config": [6, 7], "set_topology_config": [6, 7], "topologi": [6, 7, 34], "deploy_artifact_devic": [6, 8], "deploy_artifact_list": [6, 8], "generate_artifact": [6, 8], "get_artifact": [6, 8], "get_connected_devic": [6, 8], "get_devic": [6, 8], "get_devices_by_group": [6, 8], "get_info_deploy": [6, 8], "get_info_devic": [6, 8], "get_my_info": [6, 8], "get_token": [6, 8], "renew_token": [6, 8], "upload_artifact": [6, 8], "defin": [7, 26, 29], "constant": 7, "dfl": 7, "system": 7, "entiti": 7, "topology_config_fil": 7, "participant_config_fil": 7, "global": 7, "participant_config": 7, "participants_config": 7, "artifact_nam": 8, "type_artifact": 8, "device_typ": 8, "file_path": 8, "device_id": 8, "group": 8, "deployment_id": 8, "artifact_path": 8, "descript": 8, "kei": 10, "ae": 10, "symetr": 10, "pad": 10, "charactet": 10, "rest": 10, "block": 10, "care": [10, 26, 27], "content": [10, 27, 36], "doesn": 10, "affect": 10, "decript": 10, "share": 10, "mind": 10, "cipher": 10, "sould": 10, "rsa": 10, "asymetr": 10, "privat": 10, "public": 10, "pair": 10, "other": [10, 18, 20, 26, 27], "base64": 10, "load": 10, "node_nam": [11, 12, 15, 16], "pend": 11, "gossip_messages_per_round": 11, "per": [11, 12], "iter": 11, "gossip_frec": 11, "time": 11, "second": [11, 12], "via": [11, 12], "nodo_padr": [11, 12], "parent": [11, 27], "gossip_model_sends_by_round": 11, "everi": 12, "heartbeat_period": 12, "also": [12, 15, 18, 20, 27, 35], "maintain": 12, "activ": 12, "creat": [12, 18, 20, 27, 35], "heartbear": 12, "node_timeout": 12, "elimin": 12, "clear": [12, 14, 15, 27], "print": 12, "haven": 12, "happend": 12, "heartbeater_refresh_neighbors_by_period": 12, "fedavg": [13, 14], "lightninglearn": [13, 19, 26], "check_paramet": [13, 18, 19, 20], "create_train": [13, 18, 19, 20], "decode_paramet": [13, 18, 19, 20], "encode_paramet": [13, 18, 19, 20], "evalu": [13, 18, 19, 20], "finalize_round": [13, 18, 19, 20], "fit": [13, 18, 19, 20], "get_num_sampl": [13, 18, 19, 20], "get_paramet": [13, 18, 19, 20], "init": [13, 18, 19, 20], "interrupt_fit": [13, 18, 19, 20], "log_validation_metr": [13, 18, 19, 20], "set_epoch": [13, 18, 19, 20], "set_paramet": [13, 18, 19, 20], "check_and_run_aggreg": [14, 15], "get_partial_aggreg": [14, 15], "set_nodes_to_aggreg": [14, 15], "set_waiting_aggregated_model": [14, 15], "unknown": [15, 16], "ad": [15, 27], "timeout": [15, 26], "gone": 15, "notifi": [15, 27, 31, 33], "weight": [15, 18, 20, 26], "first": [15, 26], "collabor": [15, 35], "sampl": [15, 18, 20], "except_nod": 15, "partial": 15, "wait": [15, 26], "Then": 15, "listnod": 15, "empti": 15, "won": 15, "feder": [16, 26, 35], "averag": 16, "mcmahan": 16, "et": 16, "al": 16, "2016": 16, "paper": 16, "http": 16, "arxiv": 16, "org": 16, "ab": 16, "1602": 16, "05629": 16, "ponder": 16, "num_sampl": 16, "rais": [17, 18, 20], "decod": [17, 18, 20], "fail": [17, 18, 20], "match": [17, 18, 20], "templat": 18, "includ": 18, "monitor": [18, 35], "dure": 18, "compat": [18, 20, 26], "contributor": [18, 20, 26], "provid": [18, 20, 35], "self": [18, 20], "determin": [18, 20, 27], "interrupt": [18, 20], "log": [18, 20, 34], "wheight": [18, 20], "logger": 20, "lightn": 20, "atribut": 20, "cnn": [21, 23], "mlp": [21, 23], "mnistfederated_dm": 21, "idx": 26, "allow": 26, "save": 26, "under": 26, "folder": 26, "dataset": 26, "where": 26, "default": 26, "total": 26, "m": 26, "isn": 26, "inicializ": 26, "reciev": 26, "produc": 26, "carefulli": 26, "In": 26, "function": 26, "one": 26, "after": 26, "thei": 26, "start_learning_ev": [26, 27, 31, 33], "parent_node_nam": 27, "addr": 27, "aes_ciph": 27, "tcp_buffer_s": 27, "option": 27, "mani": 27, "recv": 27, "exist": 27, "Be": 27, "broken": 27, "user": [27, 35, 43], "want": 27, "reconnect": 27, "he": 27, "she": 27, "parent_nod": 27, "socket": 27, "segment": 27, "protocol": 27, "By": 27, "avoid": 27, "multipl": 27, "same": 27, "cycl": 27, "r": 27, "e": [27, 35], "cmd": 27, "valu": 27, "aliv": 27, "local": 27, "framework": [29, 35], "aggregation_finished_ev": [31, 33], "beat_received_ev": [31, 33], "conn_to_ev": [31, 33], "end_connection_ev": [31, 33], "gossip_broadcast_ev": [31, 33], "metrics_received_ev": [31, 33], "node_connected_ev": [31, 33], "params_received_ev": [31, 33], "processed_messages_ev": [31, 33], "report_status_to_controller_ev": [31, 33], "role_received_ev": [31, 33], "send_beat_ev": [31, 33], "send_role_ev": [31, 33], "stop_learning_ev": [31, 33], "store_model_parameters_ev": [31, 33], "train_set_vote_received_ev": [31, 33], "add_observ": [31, 33], "get_observ": [31, 33], "draw_graph": [31, 34], "generate_custom_topologi": [31, 34], "generate_ring_topologi": [31, 34], "generate_server_topologi": [31, 34], "generate_topologi": [31, 34], "get_matrix_adjacency_from_neighbor": [31, 34], "get_neighbors_str": [31, 34], "get_topologi": [31, 34], "update_nod": [31, 34], "update_topology_3d_json": [31, 34], "must": 33, "statu": 33, "store": 33, "pass": 33, "For": [33, 35], "each": 33, "n_node": 34, "5": 34, "b_symmetr": 34, "undirected_neighbor_num": 34, "plot": 34, "path": 34, "increase_converg": 34, "node_idx": 34, "config_particip": 34, "fedstellar": [35, 43], "fordecentr": 35, "modular": 35, "adapt": 35, "extens": 35, "central": 35, "decentr": 35, "architectur": 35, "enabl": 35, "creation": 35, "standard": 35, "approach": 35, "develop": 35, "deploi": 35, "applic": 35, "distribut": 35, "algorithm": 35, "improv": 35, "experi": 35, "secur": 35, "privaci": 35, "featur": 35, "comprehens": 35, "tool": 35, "help": 35, "analyz": 35, "perform": 35, "enriqu": [35, 43], "tom\u00e1": 35, "mart\u00ednez": 35, "beltr\u00e1n": 35, "univers": 35, "murcia": 35, "armasuiss": 35, "ani": 35, "question": 35, "pleas": 35, "contact": 35, "enriquetoma": 35, "um": 35, "app": [35, 36], "packag": [35, 36], "index": 35, "modul": [35, 36], "submodul": 36, "subpackag": 36, "basenode_test": 37, "four_nod": [37, 38, 42], "test_bad_msg": [37, 38], "test_connect_invalid_nod": [37, 38], "test_full_connect": [37, 38], "test_multimsg": [37, 38], "test_node_abrupt_down": [37, 38], "test_node_par": [37, 38], "test_non_full_connect": [37, 38], "test_socket": [37, 38], "two_nod": [37, 38, 42], "controller_test": 37, "test_env": [37, 39], "test_mender_deploy_artifact": [37, 39], "test_mender_get_artifact": [37, 39], "test_mender_get_connected_devic": [37, 39], "test_mender_get_info_deploy": [37, 39], "test_mender_get_info_devic": [37, 39], "test_mender_get_us": [37, 39], "test_mender_upload_artifact": [37, 39], "encryption_test": 37, "test_aes_encryption_decription1": [37, 40], "test_aes_encryption_decription2": [37, 40], "test_aes_encryption_decription_model": [37, 40], "test_rsa_encryption_decription1": [37, 40], "test_rsa_encryption_decription2": [37, 40], "learning_test": 37, "test_avg_complex": [37, 41], "test_avg_simpl": [37, 41], "test_encod": [37, 41], "node_test": 37, "test_bad_binary_model": [37, 42], "test_connect_while_train": [37, 42], "test_converg": [37, 42], "test_encrypted_converg": [37, 42], "test_interrupt_train": [37, 42], "test_line_network_learn": [37, 42], "test_node_down_on_learn": [37, 42], "test_ring_network_learn": [37, 42], "test_star_network_learn": [37, 42], "test_wrong_model": [37, 42], "participants_test": 37, "test_check_gpu": [37, 43], "test_yaml_fil": [37, 43], "topologymanager_test": 37, "test_ring_topologi": [37, 44], "test_ring_topology2": [37, 44], "test_topologi": [37, 44], "test_topology_6": [37, 44], "test_topology_centr": [37, 44], "check_equal_model": [37, 45], "set_test_set": [37, 45], "wait_4_result": [37, 45], "wait_network_nod": [37, 45], "x": 42, "scenario_config": 43, "document": 43, "phd": 43, "yaml": 43}, "objects": {"": [[0, 0, 0, "-", "app"], [2, 0, 0, "-", "fedstellar"], [37, 0, 0, "-", "test"]], "fedstellar": [[3, 0, 0, "-", "base_node"], [4, 0, 0, "-", "command"], [5, 0, 0, "-", "communication_protocol"], [6, 0, 0, "-", "config"], [10, 0, 0, "-", "encrypter"], [11, 0, 0, "-", "gossiper"], [12, 0, 0, "-", "heartbeater"], [13, 0, 0, "-", "learning"], [26, 0, 0, "-", "node"], [27, 0, 0, "-", "node_connection"], [28, 0, 0, "-", "node_start"], [29, 0, 0, "-", "role"], [31, 0, 0, "-", "utils"]], "fedstellar.base_node": [[3, 1, 1, "", "BaseNode"]], "fedstellar.base_node.BaseNode": [[3, 2, 1, "", "broadcast"], [3, 2, 1, "", "connect_to"], [3, 2, 1, "", "disconnect_from"], [3, 2, 1, "", "get_addr"], [3, 2, 1, "", "get_name"], [3, 2, 1, "", "get_name_demo"], [3, 2, 1, "", "get_neighbor"], [3, 2, 1, "", "get_neighbors"], [3, 2, 1, "", "get_neighbors_names"], [3, 2, 1, "", "get_network_nodes"], [3, 3, 1, "", "gossiper"], [3, 3, 1, "", "heartbeater"], [3, 3, 1, "", "host"], [3, 3, 1, "", "port"], [3, 2, 1, "", "rm_neighbor"], [3, 2, 1, "", "run"], [3, 2, 1, "", "setup_logging"], [3, 3, 1, "", "simulation"], [3, 2, 1, "", "start"], [3, 2, 1, "", "stop"], [3, 2, 1, "", "update"]], "fedstellar.command": [[4, 1, 1, "", "Beat_cmd"], [4, 1, 1, "", "Command"], [4, 1, 1, "", "Conn_to_cmd"], [4, 1, 1, "", "Metrics_cmd"], [4, 1, 1, "", "Model_initialized_cmd"], [4, 1, 1, "", "Models_Ready_cmd"], [4, 1, 1, "", "Models_aggregated_cmd"], [4, 1, 1, "", "Params_cmd"], [4, 1, 1, "", "Role_cmd"], [4, 1, 1, "", "Start_learning_cmd"], [4, 1, 1, "", "Stop_cmd"], [4, 1, 1, "", "Stop_learning_cmd"], [4, 1, 1, "", "Transfer_leadership_cmd"], [4, 1, 1, "", "Vote_train_set_cmd"]], "fedstellar.command.Beat_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Command": [[4, 2, 1, "", "execute"]], "fedstellar.command.Conn_to_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Metrics_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Model_initialized_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Models_Ready_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Models_aggregated_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Params_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Role_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Start_learning_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Stop_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Stop_learning_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Transfer_leadership_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.command.Vote_train_set_cmd": [[4, 2, 1, "", "execute"]], "fedstellar.communication_protocol": [[5, 1, 1, "", "CommunicationProtocol"]], "fedstellar.communication_protocol.CommunicationProtocol": [[5, 3, 1, "", "BEAT"], [5, 3, 1, "", "CONN"], [5, 3, 1, "", "CONN_TO"], [5, 3, 1, "", "METRICS"], [5, 3, 1, "", "MODELS_AGGREGATED"], [5, 3, 1, "", "MODELS_AGGREGATED_CLOSE"], [5, 3, 1, "", "MODELS_READY"], [5, 3, 1, "", "MODEL_INITIALIZED"], [5, 3, 1, "", "PARAMS"], [5, 3, 1, "", "PARAMS_CLOSE"], [5, 3, 1, "", "ROLE"], [5, 3, 1, "", "START_LEARNING"], [5, 3, 1, "", "STOP"], [5, 3, 1, "", "STOP_LEARNING"], [5, 3, 1, "", "TRANSFER_LEADERSHIP"], [5, 3, 1, "", "VOTE_TRAIN_SET"], [5, 3, 1, "", "VOTE_TRAIN_SET_CLOSE"], [5, 2, 1, "", "add_processed_messages"], [5, 2, 1, "", "build_beat_msg"], [5, 2, 1, "", "build_connect_msg"], [5, 2, 1, "", "build_connect_to_msg"], [5, 2, 1, "", "build_metrics_msg"], [5, 2, 1, "", "build_model_initialized_msg"], [5, 2, 1, "", "build_models_aggregated_msg"], [5, 2, 1, "", "build_models_ready_msg"], [5, 2, 1, "", "build_params_msg"], [5, 2, 1, "", "build_role_msg"], [5, 2, 1, "", "build_start_learning_msg"], [5, 2, 1, "", "build_stop_learning_msg"], [5, 2, 1, "", "build_stop_msg"], [5, 2, 1, "", "build_transfer_leadership_msg"], [5, 2, 1, "", "build_vote_train_set_msg"], [5, 2, 1, "", "check_collapse"], [5, 2, 1, "", "check_params_incomplete"], [5, 3, 1, "", "command_dict"], [5, 2, 1, "", "generate_hased_message"], [5, 3, 1, "", "last_messages"], [5, 2, 1, "", "process_connection"], [5, 2, 1, "", "process_message"]], "fedstellar.config": [[7, 0, 0, "-", "config"], [8, 0, 0, "-", "mender"]], "fedstellar.config.config": [[7, 1, 1, "", "Config"]], "fedstellar.config.config.Config": [[7, 2, 1, "", "add_participant_config"], [7, 2, 1, "", "get_participant_config"], [7, 2, 1, "", "get_topology_config"], [7, 3, 1, "", "participant"], [7, 3, 1, "", "participants"], [7, 3, 1, "", "participants_path"], [7, 2, 1, "", "set_participant_config"], [7, 2, 1, "", "set_participants_config"], [7, 2, 1, "", "set_topology_config"], [7, 3, 1, "", "topology"]], "fedstellar.config.mender": [[8, 1, 1, "", "Mender"]], "fedstellar.config.mender.Mender": [[8, 2, 1, "", "deploy_artifact_device"], [8, 2, 1, "", "deploy_artifact_list"], [8, 2, 1, "", "generate_artifact"], [8, 2, 1, "", "get_artifacts"], [8, 2, 1, "", "get_connected_device"], [8, 2, 1, "", "get_devices"], [8, 2, 1, "", "get_devices_by_group"], [8, 2, 1, "", "get_info_deployment"], [8, 2, 1, "", "get_info_device"], [8, 2, 1, "", "get_my_info"], [8, 2, 1, "", "get_token"], [8, 2, 1, "", "renew_token"], [8, 2, 1, "", "upload_artifact"]], "fedstellar.encrypter": [[10, 1, 1, "", "AESCipher"], [10, 1, 1, "", "Encrypter"], [10, 1, 1, "", "RSACipher"]], "fedstellar.encrypter.AESCipher": [[10, 2, 1, "", "add_padding"], [10, 2, 1, "", "decrypt"], [10, 2, 1, "", "encrypt"], [10, 2, 1, "", "get_block_size"], [10, 2, 1, "", "get_key"], [10, 2, 1, "", "key_len"]], "fedstellar.encrypter.Encrypter": [[10, 2, 1, "", "decrypt"], [10, 2, 1, "", "encrypt"], [10, 2, 1, "", "get_key"]], "fedstellar.encrypter.RSACipher": [[10, 2, 1, "", "decrypt"], [10, 2, 1, "", "encrypt"], [10, 2, 1, "", "get_key"], [10, 2, 1, "", "load_pair_public_key"]], "fedstellar.gossiper": [[11, 1, 1, "", "Gossiper"]], "fedstellar.gossiper.Gossiper": [[11, 2, 1, "", "add_messages"], [11, 2, 1, "", "run"], [11, 2, 1, "", "stop"]], "fedstellar.heartbeater": [[12, 1, 1, "", "Heartbeater"]], "fedstellar.heartbeater.Heartbeater": [[12, 2, 1, "", "add_node"], [12, 2, 1, "", "add_node_role"], [12, 2, 1, "", "clear_nodes"], [12, 2, 1, "", "get_nodes"], [12, 2, 1, "", "run"], [12, 2, 1, "", "stop"], [12, 2, 1, "", "update_config_with_neighbors"]], "fedstellar.learning": [[14, 0, 0, "-", "aggregators"], [17, 0, 0, "-", "exceptions"], [18, 0, 0, "-", "learner"], [19, 0, 0, "-", "pytorch"]], "fedstellar.learning.aggregators": [[15, 0, 0, "-", "aggregator"], [16, 0, 0, "-", "fedavg"]], "fedstellar.learning.aggregators.aggregator": [[15, 1, 1, "", "Aggregator"]], "fedstellar.learning.aggregators.aggregator.Aggregator": [[15, 2, 1, "", "add_model"], [15, 2, 1, "", "aggregate"], [15, 2, 1, "", "check_and_run_aggregation"], [15, 2, 1, "", "clear"], [15, 2, 1, "", "get_partial_aggregation"], [15, 2, 1, "", "run"], [15, 2, 1, "", "set_nodes_to_aggregate"], [15, 2, 1, "", "set_waiting_aggregated_model"]], "fedstellar.learning.aggregators.fedavg": [[16, 1, 1, "", "FedAvg"]], "fedstellar.learning.aggregators.fedavg.FedAvg": [[16, 2, 1, "", "aggregate"]], "fedstellar.learning.exceptions": [[17, 4, 1, "", "DecodingParamsError"], [17, 4, 1, "", "ModelNotMatchingError"]], "fedstellar.learning.learner": [[18, 1, 1, "", "NodeLearner"]], "fedstellar.learning.learner.NodeLearner": [[18, 2, 1, "", "check_parameters"], [18, 2, 1, "", "close"], [18, 2, 1, "", "create_trainer"], [18, 2, 1, "", "decode_parameters"], [18, 2, 1, "", "encode_parameters"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "finalize_round"], [18, 2, 1, "", "fit"], [18, 2, 1, "", "get_num_samples"], [18, 2, 1, "", "get_parameters"], [18, 2, 1, "", "init"], [18, 2, 1, "", "interrupt_fit"], [18, 2, 1, "", "log_validation_metrics"], [18, 2, 1, "", "set_data"], [18, 2, 1, "", "set_epochs"], [18, 2, 1, "", "set_model"], [18, 2, 1, "", "set_parameters"]], "fedstellar.learning.pytorch": [[20, 0, 0, "-", "lightninglearner"]], "fedstellar.learning.pytorch.lightninglearner": [[20, 1, 1, "", "LightningLearner"]], "fedstellar.learning.pytorch.lightninglearner.LightningLearner": [[20, 2, 1, "", "check_parameters"], [20, 2, 1, "", "close"], [20, 2, 1, "", "create_trainer"], [20, 2, 1, "", "decode_parameters"], [20, 2, 1, "", "encode_parameters"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "finalize_round"], [20, 2, 1, "", "fit"], [20, 2, 1, "", "get_num_samples"], [20, 2, 1, "", "get_parameters"], [20, 2, 1, "", "init"], [20, 2, 1, "", "interrupt_fit"], [20, 2, 1, "", "log_validation_metrics"], [20, 2, 1, "", "set_data"], [20, 2, 1, "", "set_epochs"], [20, 2, 1, "", "set_model"], [20, 2, 1, "", "set_parameters"]], "fedstellar.node": [[26, 1, 1, "", "Node"]], "fedstellar.node.Node": [[26, 2, 1, "", "add_model"], [26, 3, 1, "", "aggregator"], [26, 2, 1, "", "connect_to"], [26, 3, 1, "", "learner"], [26, 3, 1, "", "round"], [26, 2, 1, "", "set_data"], [26, 2, 1, "", "set_model"], [26, 2, 1, "", "set_start_learning"], [26, 2, 1, "", "set_stop_learning"], [26, 2, 1, "", "stop"], [26, 3, 1, "", "totalrounds"], [26, 2, 1, "", "update"]], "fedstellar.node_connection": [[27, 1, 1, "", "NodeConnection"]], "fedstellar.node_connection.NodeConnection": [[27, 2, 1, "", "add_models_aggregated"], [27, 2, 1, "", "add_param_segment"], [27, 2, 1, "", "add_processed_messages"], [27, 2, 1, "", "clear_buffer"], [27, 2, 1, "", "clear_models_aggregated"], [27, 2, 1, "", "get_addr"], [27, 2, 1, "", "get_model_initialized"], [27, 2, 1, "", "get_model_ready_status"], [27, 2, 1, "", "get_models_aggregated"], [27, 2, 1, "", "get_name"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "notify_conn_to"], [27, 2, 1, "", "notify_heartbeat"], [27, 2, 1, "", "notify_metrics"], [27, 2, 1, "", "notify_params"], [27, 2, 1, "", "notify_role"], [27, 2, 1, "", "notify_start_learning"], [27, 2, 1, "", "notify_stop_learning"], [27, 2, 1, "", "notify_train_set_votes"], [27, 2, 1, "", "run"], [27, 2, 1, "", "send"], [27, 2, 1, "", "set_model_initialized"], [27, 2, 1, "", "set_model_ready_status"], [27, 2, 1, "", "set_transfer_leadership"], [27, 2, 1, "", "start"], [27, 2, 1, "", "stop"]], "fedstellar.node_start": [[28, 5, 1, "", "main"]], "fedstellar.role": [[29, 1, 1, "", "Role"]], "fedstellar.role.Role": [[29, 3, 1, "", "AGGREGATOR"], [29, 3, 1, "", "IDLE"], [29, 3, 1, "", "PROXY"], [29, 3, 1, "", "SERVER"], [29, 3, 1, "", "TRAINER"]], "fedstellar.utils": [[32, 0, 0, "-", "env"], [33, 0, 0, "-", "observer"], [34, 0, 0, "-", "topologymanager"]], "fedstellar.utils.env": [[32, 5, 1, "", "collect_env"]], "fedstellar.utils.observer": [[33, 1, 1, "", "Events"], [33, 1, 1, "", "Observable"], [33, 1, 1, "", "Observer"]], "fedstellar.utils.observer.Events": [[33, 3, 1, "", "AGGREGATION_FINISHED_EVENT"], [33, 3, 1, "", "BEAT_RECEIVED_EVENT"], [33, 3, 1, "", "CONN_TO_EVENT"], [33, 3, 1, "", "END_CONNECTION_EVENT"], [33, 3, 1, "", "GOSSIP_BROADCAST_EVENT"], [33, 3, 1, "", "METRICS_RECEIVED_EVENT"], [33, 3, 1, "", "NODE_CONNECTED_EVENT"], [33, 3, 1, "", "PARAMS_RECEIVED_EVENT"], [33, 3, 1, "", "PROCESSED_MESSAGES_EVENT"], [33, 3, 1, "", "REPORT_STATUS_TO_CONTROLLER_EVENT"], [33, 3, 1, "", "ROLE_RECEIVED_EVENT"], [33, 3, 1, "", "SEND_BEAT_EVENT"], [33, 3, 1, "", "SEND_ROLE_EVENT"], [33, 3, 1, "", "START_LEARNING_EVENT"], [33, 3, 1, "", "STOP_LEARNING_EVENT"], [33, 3, 1, "", "STORE_MODEL_PARAMETERS_EVENT"], [33, 3, 1, "", "TRAIN_SET_VOTE_RECEIVED_EVENT"]], "fedstellar.utils.observer.Observable": [[33, 2, 1, "", "add_observer"], [33, 2, 1, "", "get_observers"], [33, 2, 1, "", "notify"]], "fedstellar.utils.observer.Observer": [[33, 2, 1, "", "update"]], "fedstellar.utils.topologymanager": [[34, 1, 1, "", "TopologyManager"]], "fedstellar.utils.topologymanager.TopologyManager": [[34, 2, 1, "", "add_nodes"], [34, 2, 1, "", "draw_graph"], [34, 2, 1, "", "generate_custom_topology"], [34, 2, 1, "", "generate_ring_topology"], [34, 2, 1, "", "generate_server_topology"], [34, 2, 1, "", "generate_topology"], [34, 2, 1, "", "get_matrix_adjacency_from_neighbors"], [34, 2, 1, "", "get_neighbors"], [34, 2, 1, "", "get_neighbors_string"], [34, 2, 1, "", "get_node"], [34, 2, 1, "", "get_nodes"], [34, 2, 1, "", "get_topology"], [34, 2, 1, "", "update_nodes"], [34, 2, 1, "", "update_topology_3d_json"]], "test": [[38, 0, 0, "-", "basenode_test"], [39, 0, 0, "-", "controller_test"], [40, 0, 0, "-", "encryption_test"], [41, 0, 0, "-", "learning_test"], [42, 0, 0, "-", "node_test"], [43, 0, 0, "-", "participants_test"], [44, 0, 0, "-", "topologymanager_test"], [45, 0, 0, "-", "utils"]], "test.basenode_test": [[38, 5, 1, "", "four_nodes"], [38, 5, 1, "", "test_bad_msg"], [38, 5, 1, "", "test_connect_invalid_node"], [38, 5, 1, "", "test_full_connected"], [38, 5, 1, "", "test_multimsg"], [38, 5, 1, "", "test_node_abrupt_down"], [38, 5, 1, "", "test_node_paring"], [38, 5, 1, "", "test_non_full_connected"], [38, 5, 1, "", "test_socket"], [38, 5, 1, "", "two_nodes"]], "test.controller_test": [[39, 5, 1, "", "test_env"], [39, 5, 1, "", "test_mender_deploy_artifact"], [39, 5, 1, "", "test_mender_get_artifacts"], [39, 5, 1, "", "test_mender_get_connected_device"], [39, 5, 1, "", "test_mender_get_info_deployment"], [39, 5, 1, "", "test_mender_get_info_device"], [39, 5, 1, "", "test_mender_get_users"], [39, 5, 1, "", "test_mender_upload_artifact"]], "test.encryption_test": [[40, 5, 1, "", "test_aes_encryption_decription1"], [40, 5, 1, "", "test_aes_encryption_decription2"], [40, 5, 1, "", "test_aes_encryption_decription_model"], [40, 5, 1, "", "test_rsa_encryption_decription1"], [40, 5, 1, "", "test_rsa_encryption_decription2"]], "test.learning_test": [[41, 5, 1, "", "test_avg_complex"], [41, 5, 1, "", "test_avg_simple"], [41, 5, 1, "", "test_encoding"]], "test.node_test": [[42, 5, 1, "", "four_nodes"], [42, 5, 1, "", "test_bad_binary_model"], [42, 5, 1, "", "test_connect_while_training"], [42, 5, 1, "", "test_convergence"], [42, 5, 1, "", "test_encrypted_convergence"], [42, 5, 1, "", "test_interrupt_train"], [42, 5, 1, "", "test_line_network_learning"], [42, 5, 1, "", "test_node_down_on_learning"], [42, 5, 1, "", "test_ring_network_learning"], [42, 5, 1, "", "test_star_network_learning"], [42, 5, 1, "", "test_wrong_model"], [42, 5, 1, "", "two_nodes"]], "test.participants_test": [[43, 5, 1, "", "test_check_gpu"], [43, 5, 1, "", "test_yaml_file"]], "test.topologymanager_test": [[44, 5, 1, "", "test_ring_topology"], [44, 5, 1, "", "test_ring_topology2"], [44, 5, 1, "", "test_topology"], [44, 5, 1, "", "test_topology_6"], [44, 5, 1, "", "test_topology_centralized"]], "test.utils": [[45, 5, 1, "", "check_equal_models"], [45, 5, 1, "", "set_test_settings"], [45, 5, 1, "", "wait_4_results"], [45, 5, 1, "", "wait_network_nodes"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"app": [0, 1], "packag": [0, 2, 6, 13, 14, 19, 21, 23, 31, 37], "submodul": [0, 2, 6, 13, 14, 19, 21, 23, 31, 37], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45], "content": [0, 2, 6, 13, 14, 19, 21, 23, 31, 35, 37], "main": 1, "fedstellar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36], "subpackag": [2, 13, 19, 21], "base_nod": 3, "command": 4, "communication_protocol": 5, "config": [6, 7, 8], "mender": 8, "control": 9, "encrypt": 10, "gossip": 11, "heartbeat": 12, "learn": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "aggreg": [14, 15, 16], "fedavg": 16, "except": 17, "learner": 18, "pytorch": [19, 20, 21, 22, 23, 24, 25], "lightninglearn": 20, "mnist_exampl": [21, 22, 23, 24, 25], "mnistfederated_dm": 22, "model": [23, 24, 25], "cnn": 24, "mlp": 25, "node": 26, "node_connect": 27, "node_start": 28, "role": 29, "singl": 30, "devic": 30, "util": [31, 32, 33, 34, 45], "env": 32, "observ": 33, "topologymanag": 34, "test": [37, 38, 39, 40, 41, 42, 43, 44, 45], "basenode_test": 38, "controller_test": 39, "encryption_test": 40, "learning_test": 41, "node_test": 42, "participants_test": 43, "topologymanager_test": 44}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"app package": [[0, "app-package"]], "Submodules": [[0, "submodules"], [2, "submodules"], [6, "submodules"], [13, "submodules"], [14, "submodules"], [19, "submodules"], [21, "submodules"], [23, "submodules"], [31, "submodules"], [37, "submodules"]], "Module contents": [[0, "module-app"], [2, "module-fedstellar"], [6, "module-fedstellar.config"], [13, "module-fedstellar.learning"], [14, "module-fedstellar.learning.aggregators"], [19, "module-fedstellar.learning.pytorch"], [21, "module-contents"], [23, "module-contents"], [31, "module-fedstellar.utils"], [37, "module-test"]], "app.main module": [[1, "app-main-module"]], "fedstellar package": [[2, "fedstellar-package"]], "Subpackages": [[2, "subpackages"], [13, "subpackages"], [19, "subpackages"], [21, "subpackages"]], "fedstellar.base_node module": [[3, "module-fedstellar.base_node"]], "fedstellar.command module": [[4, "module-fedstellar.command"]], "fedstellar.communication_protocol module": [[5, "module-fedstellar.communication_protocol"]], "fedstellar.config package": [[6, "fedstellar-config-package"]], "fedstellar.config.config module": [[7, "module-fedstellar.config.config"]], "fedstellar.config.mender module": [[8, "module-fedstellar.config.mender"]], "fedstellar.controller module": [[9, "fedstellar-controller-module"]], "fedstellar.encrypter module": [[10, "module-fedstellar.encrypter"]], "fedstellar.gossiper module": [[11, "module-fedstellar.gossiper"]], "fedstellar.heartbeater module": [[12, "module-fedstellar.heartbeater"]], "fedstellar.learning package": [[13, "fedstellar-learning-package"]], "fedstellar.learning.aggregators package": [[14, "fedstellar-learning-aggregators-package"]], "fedstellar.learning.aggregators.aggregator module": [[15, "module-fedstellar.learning.aggregators.aggregator"]], "fedstellar.learning.aggregators.fedavg module": [[16, "module-fedstellar.learning.aggregators.fedavg"]], "fedstellar.learning.exceptions module": [[17, "module-fedstellar.learning.exceptions"]], "fedstellar.learning.learner module": [[18, "module-fedstellar.learning.learner"]], "fedstellar.learning.pytorch package": [[19, "fedstellar-learning-pytorch-package"]], "fedstellar.learning.pytorch.lightninglearner module": [[20, "module-fedstellar.learning.pytorch.lightninglearner"]], "fedstellar.learning.pytorch.mnist_examples package": [[21, "fedstellar-learning-pytorch-mnist-examples-package"]], "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm module": [[22, "fedstellar-learning-pytorch-mnist-examples-mnistfederated-dm-module"]], "fedstellar.learning.pytorch.mnist_examples.models package": [[23, "fedstellar-learning-pytorch-mnist-examples-models-package"]], "fedstellar.learning.pytorch.mnist_examples.models.cnn module": [[24, "fedstellar-learning-pytorch-mnist-examples-models-cnn-module"]], "fedstellar.learning.pytorch.mnist_examples.models.mlp module": [[25, "fedstellar-learning-pytorch-mnist-examples-models-mlp-module"]], "fedstellar.node module": [[26, "module-fedstellar.node"]], "fedstellar.node_connection module": [[27, "module-fedstellar.node_connection"]], "fedstellar.node_start module": [[28, "module-fedstellar.node_start"]], "fedstellar.role module": [[29, "module-fedstellar.role"]], "fedstellar.single-device module": [[30, "fedstellar-single-device-module"]], "fedstellar.utils package": [[31, "fedstellar-utils-package"]], "fedstellar.utils.env module": [[32, "module-fedstellar.utils.env"]], "fedstellar.utils.observer module": [[33, "module-fedstellar.utils.observer"]], "fedstellar.utils.topologymanager module": [[34, "module-fedstellar.utils.topologymanager"]], "Contents:": [[35, null]], "fedstellar": [[36, "fedstellar"]], "test package": [[37, "test-package"]], "test.basenode_test module": [[38, "module-test.basenode_test"]], "test.controller_test module": [[39, "module-test.controller_test"]], "test.encryption_test module": [[40, "module-test.encryption_test"]], "test.learning_test module": [[41, "module-test.learning_test"]], "test.node_test module": [[42, "module-test.node_test"]], "test.participants_test module": [[43, "module-test.participants_test"]], "test.topologymanager_test module": [[44, "module-test.topologymanager_test"]], "test.utils module": [[45, "module-test.utils"]]}, "indexentries": {"app": [[0, "module-app"]], "module": [[0, "module-app"], [2, "module-fedstellar"], [3, "module-fedstellar.base_node"], [4, "module-fedstellar.command"], [5, "module-fedstellar.communication_protocol"], [6, "module-fedstellar.config"], [7, "module-fedstellar.config.config"], [8, "module-fedstellar.config.mender"], [10, "module-fedstellar.encrypter"], [11, "module-fedstellar.gossiper"], [12, "module-fedstellar.heartbeater"], [13, "module-fedstellar.learning"], [14, "module-fedstellar.learning.aggregators"], [15, "module-fedstellar.learning.aggregators.aggregator"], [16, "module-fedstellar.learning.aggregators.fedavg"], [17, "module-fedstellar.learning.exceptions"], [18, "module-fedstellar.learning.learner"], [19, "module-fedstellar.learning.pytorch"], [20, "module-fedstellar.learning.pytorch.lightninglearner"], [26, "module-fedstellar.node"], [27, "module-fedstellar.node_connection"], [28, "module-fedstellar.node_start"], [29, "module-fedstellar.role"], [31, "module-fedstellar.utils"], [32, "module-fedstellar.utils.env"], [33, "module-fedstellar.utils.observer"], [34, "module-fedstellar.utils.topologymanager"], [37, "module-test"], [38, "module-test.basenode_test"], [39, "module-test.controller_test"], [40, "module-test.encryption_test"], [41, "module-test.learning_test"], [42, "module-test.node_test"], [43, "module-test.participants_test"], [44, "module-test.topologymanager_test"], [45, "module-test.utils"]], "fedstellar": [[2, "module-fedstellar"]], "basenode (class in fedstellar.base_node)": [[3, "fedstellar.base_node.BaseNode"]], "broadcast() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.broadcast"]], "connect_to() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.connect_to"]], "disconnect_from() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.disconnect_from"]], "fedstellar.base_node": [[3, "module-fedstellar.base_node"]], "get_addr() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.get_addr"]], "get_name() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.get_name"]], "get_name_demo() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.get_name_demo"]], "get_neighbor() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.get_neighbor"]], "get_neighbors() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.get_neighbors"]], "get_neighbors_names() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.get_neighbors_names"]], "get_network_nodes() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.get_network_nodes"]], "gossiper (fedstellar.base_node.basenode attribute)": [[3, "fedstellar.base_node.BaseNode.gossiper"]], "heartbeater (fedstellar.base_node.basenode attribute)": [[3, "fedstellar.base_node.BaseNode.heartbeater"]], "host (fedstellar.base_node.basenode attribute)": [[3, "fedstellar.base_node.BaseNode.host"]], "port (fedstellar.base_node.basenode attribute)": [[3, "fedstellar.base_node.BaseNode.port"]], "rm_neighbor() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.rm_neighbor"]], "run() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.run"]], "setup_logging() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.setup_logging"]], "simulation (fedstellar.base_node.basenode attribute)": [[3, "fedstellar.base_node.BaseNode.simulation"]], "start() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.start"]], "stop() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.stop"]], "update() (fedstellar.base_node.basenode method)": [[3, "fedstellar.base_node.BaseNode.update"]], "beat_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Beat_cmd"]], "command (class in fedstellar.command)": [[4, "fedstellar.command.Command"]], "conn_to_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Conn_to_cmd"]], "metrics_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Metrics_cmd"]], "model_initialized_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Model_initialized_cmd"]], "models_ready_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Models_Ready_cmd"]], "models_aggregated_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Models_aggregated_cmd"]], "params_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Params_cmd"]], "role_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Role_cmd"]], "start_learning_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Start_learning_cmd"]], "stop_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Stop_cmd"]], "stop_learning_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Stop_learning_cmd"]], "transfer_leadership_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Transfer_leadership_cmd"]], "vote_train_set_cmd (class in fedstellar.command)": [[4, "fedstellar.command.Vote_train_set_cmd"]], "execute() (fedstellar.command.beat_cmd method)": [[4, "fedstellar.command.Beat_cmd.execute"]], "execute() (fedstellar.command.command method)": [[4, "fedstellar.command.Command.execute"]], "execute() (fedstellar.command.conn_to_cmd method)": [[4, "fedstellar.command.Conn_to_cmd.execute"]], "execute() (fedstellar.command.metrics_cmd method)": [[4, "fedstellar.command.Metrics_cmd.execute"]], "execute() (fedstellar.command.model_initialized_cmd method)": [[4, "fedstellar.command.Model_initialized_cmd.execute"]], "execute() (fedstellar.command.models_ready_cmd method)": [[4, "fedstellar.command.Models_Ready_cmd.execute"]], "execute() (fedstellar.command.models_aggregated_cmd method)": [[4, "fedstellar.command.Models_aggregated_cmd.execute"]], "execute() (fedstellar.command.params_cmd method)": [[4, "fedstellar.command.Params_cmd.execute"]], "execute() (fedstellar.command.role_cmd method)": [[4, "fedstellar.command.Role_cmd.execute"]], "execute() (fedstellar.command.start_learning_cmd method)": [[4, "fedstellar.command.Start_learning_cmd.execute"]], "execute() (fedstellar.command.stop_cmd method)": [[4, "fedstellar.command.Stop_cmd.execute"]], "execute() (fedstellar.command.stop_learning_cmd method)": [[4, "fedstellar.command.Stop_learning_cmd.execute"]], "execute() (fedstellar.command.transfer_leadership_cmd method)": [[4, "fedstellar.command.Transfer_leadership_cmd.execute"]], "execute() (fedstellar.command.vote_train_set_cmd method)": [[4, "fedstellar.command.Vote_train_set_cmd.execute"]], "fedstellar.command": [[4, "module-fedstellar.command"]], "beat (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.BEAT"]], "conn (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.CONN"]], "conn_to (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.CONN_TO"]], "communicationprotocol (class in fedstellar.communication_protocol)": [[5, "fedstellar.communication_protocol.CommunicationProtocol"]], "metrics (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.METRICS"]], "models_aggregated (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.MODELS_AGGREGATED"]], "models_aggregated_close (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.MODELS_AGGREGATED_CLOSE"]], "models_ready (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.MODELS_READY"]], "model_initialized (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.MODEL_INITIALIZED"]], "params (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.PARAMS"]], "params_close (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.PARAMS_CLOSE"]], "role (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.ROLE"]], "start_learning (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.START_LEARNING"]], "stop (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.STOP"]], "stop_learning (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.STOP_LEARNING"]], "transfer_leadership (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.TRANSFER_LEADERSHIP"]], "vote_train_set (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.VOTE_TRAIN_SET"]], "vote_train_set_close (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.VOTE_TRAIN_SET_CLOSE"]], "add_processed_messages() (fedstellar.communication_protocol.communicationprotocol method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.add_processed_messages"]], "build_beat_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_beat_msg"]], "build_connect_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_connect_msg"]], "build_connect_to_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_connect_to_msg"]], "build_metrics_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_metrics_msg"]], "build_model_initialized_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_model_initialized_msg"]], "build_models_aggregated_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_models_aggregated_msg"]], "build_models_ready_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_models_ready_msg"]], "build_params_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_params_msg"]], "build_role_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_role_msg"]], "build_start_learning_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_start_learning_msg"]], "build_stop_learning_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_stop_learning_msg"]], "build_stop_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_stop_msg"]], "build_transfer_leadership_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_transfer_leadership_msg"]], "build_vote_train_set_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.build_vote_train_set_msg"]], "check_collapse() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.check_collapse"]], "check_params_incomplete() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.check_params_incomplete"]], "command_dict (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.command_dict"]], "fedstellar.communication_protocol": [[5, "module-fedstellar.communication_protocol"]], "generate_hased_message() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.generate_hased_message"]], "last_messages (fedstellar.communication_protocol.communicationprotocol attribute)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.last_messages"]], "process_connection() (fedstellar.communication_protocol.communicationprotocol static method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.process_connection"]], "process_message() (fedstellar.communication_protocol.communicationprotocol method)": [[5, "fedstellar.communication_protocol.CommunicationProtocol.process_message"]], "fedstellar.config": [[6, "module-fedstellar.config"]], "config (class in fedstellar.config.config)": [[7, "fedstellar.config.config.Config"]], "add_participant_config() (fedstellar.config.config.config method)": [[7, "fedstellar.config.config.Config.add_participant_config"]], "fedstellar.config.config": [[7, "module-fedstellar.config.config"]], "get_participant_config() (fedstellar.config.config.config method)": [[7, "fedstellar.config.config.Config.get_participant_config"]], "get_topology_config() (fedstellar.config.config.config method)": [[7, "fedstellar.config.config.Config.get_topology_config"]], "participant (fedstellar.config.config.config attribute)": [[7, "fedstellar.config.config.Config.participant"]], "participants (fedstellar.config.config.config attribute)": [[7, "fedstellar.config.config.Config.participants"]], "participants_path (fedstellar.config.config.config attribute)": [[7, "fedstellar.config.config.Config.participants_path"]], "set_participant_config() (fedstellar.config.config.config method)": [[7, "fedstellar.config.config.Config.set_participant_config"]], "set_participants_config() (fedstellar.config.config.config method)": [[7, "fedstellar.config.config.Config.set_participants_config"]], "set_topology_config() (fedstellar.config.config.config method)": [[7, "fedstellar.config.config.Config.set_topology_config"]], "topology (fedstellar.config.config.config attribute)": [[7, "fedstellar.config.config.Config.topology"]], "mender (class in fedstellar.config.mender)": [[8, "fedstellar.config.mender.Mender"]], "deploy_artifact_device() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.deploy_artifact_device"]], "deploy_artifact_list() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.deploy_artifact_list"]], "fedstellar.config.mender": [[8, "module-fedstellar.config.mender"]], "generate_artifact() (fedstellar.config.mender.mender static method)": [[8, "fedstellar.config.mender.Mender.generate_artifact"]], "get_artifacts() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.get_artifacts"]], "get_connected_device() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.get_connected_device"]], "get_devices() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.get_devices"]], "get_devices_by_group() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.get_devices_by_group"]], "get_info_deployment() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.get_info_deployment"]], "get_info_device() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.get_info_device"]], "get_my_info() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.get_my_info"]], "get_token() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.get_token"]], "renew_token() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.renew_token"]], "upload_artifact() (fedstellar.config.mender.mender method)": [[8, "fedstellar.config.mender.Mender.upload_artifact"]], "aescipher (class in fedstellar.encrypter)": [[10, "fedstellar.encrypter.AESCipher"]], "encrypter (class in fedstellar.encrypter)": [[10, "fedstellar.encrypter.Encrypter"]], "rsacipher (class in fedstellar.encrypter)": [[10, "fedstellar.encrypter.RSACipher"]], "add_padding() (fedstellar.encrypter.aescipher method)": [[10, "fedstellar.encrypter.AESCipher.add_padding"]], "decrypt() (fedstellar.encrypter.aescipher method)": [[10, "fedstellar.encrypter.AESCipher.decrypt"]], "decrypt() (fedstellar.encrypter.encrypter method)": [[10, "fedstellar.encrypter.Encrypter.decrypt"]], "decrypt() (fedstellar.encrypter.rsacipher method)": [[10, "fedstellar.encrypter.RSACipher.decrypt"]], "encrypt() (fedstellar.encrypter.aescipher method)": [[10, "fedstellar.encrypter.AESCipher.encrypt"]], "encrypt() (fedstellar.encrypter.encrypter method)": [[10, "fedstellar.encrypter.Encrypter.encrypt"]], "encrypt() (fedstellar.encrypter.rsacipher method)": [[10, "fedstellar.encrypter.RSACipher.encrypt"]], "fedstellar.encrypter": [[10, "module-fedstellar.encrypter"]], "get_block_size() (fedstellar.encrypter.aescipher static method)": [[10, "fedstellar.encrypter.AESCipher.get_block_size"]], "get_key() (fedstellar.encrypter.aescipher method)": [[10, "fedstellar.encrypter.AESCipher.get_key"]], "get_key() (fedstellar.encrypter.encrypter method)": [[10, "fedstellar.encrypter.Encrypter.get_key"]], "get_key() (fedstellar.encrypter.rsacipher method)": [[10, "fedstellar.encrypter.RSACipher.get_key"]], "key_len() (fedstellar.encrypter.aescipher static method)": [[10, "fedstellar.encrypter.AESCipher.key_len"]], "load_pair_public_key() (fedstellar.encrypter.rsacipher method)": [[10, "fedstellar.encrypter.RSACipher.load_pair_public_key"]], "gossiper (class in fedstellar.gossiper)": [[11, "fedstellar.gossiper.Gossiper"]], "add_messages() (fedstellar.gossiper.gossiper method)": [[11, "fedstellar.gossiper.Gossiper.add_messages"]], "fedstellar.gossiper": [[11, "module-fedstellar.gossiper"]], "run() (fedstellar.gossiper.gossiper method)": [[11, "fedstellar.gossiper.Gossiper.run"]], "stop() (fedstellar.gossiper.gossiper method)": [[11, "fedstellar.gossiper.Gossiper.stop"]], "heartbeater (class in fedstellar.heartbeater)": [[12, "fedstellar.heartbeater.Heartbeater"]], "add_node() (fedstellar.heartbeater.heartbeater method)": [[12, "fedstellar.heartbeater.Heartbeater.add_node"]], "add_node_role() (fedstellar.heartbeater.heartbeater method)": [[12, "fedstellar.heartbeater.Heartbeater.add_node_role"]], "clear_nodes() (fedstellar.heartbeater.heartbeater method)": [[12, "fedstellar.heartbeater.Heartbeater.clear_nodes"]], "fedstellar.heartbeater": [[12, "module-fedstellar.heartbeater"]], "get_nodes() (fedstellar.heartbeater.heartbeater method)": [[12, "fedstellar.heartbeater.Heartbeater.get_nodes"]], "run() (fedstellar.heartbeater.heartbeater method)": [[12, "fedstellar.heartbeater.Heartbeater.run"]], "stop() (fedstellar.heartbeater.heartbeater method)": [[12, "fedstellar.heartbeater.Heartbeater.stop"]], "update_config_with_neighbors() (fedstellar.heartbeater.heartbeater method)": [[12, "fedstellar.heartbeater.Heartbeater.update_config_with_neighbors"]], "fedstellar.learning": [[13, "module-fedstellar.learning"]], "fedstellar.learning.aggregators": [[14, "module-fedstellar.learning.aggregators"]], "aggregator (class in fedstellar.learning.aggregators.aggregator)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator"]], "add_model() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator.add_model"]], "aggregate() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator.aggregate"]], "check_and_run_aggregation() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator.check_and_run_aggregation"]], "clear() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator.clear"]], "fedstellar.learning.aggregators.aggregator": [[15, "module-fedstellar.learning.aggregators.aggregator"]], "get_partial_aggregation() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator.get_partial_aggregation"]], "run() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator.run"]], "set_nodes_to_aggregate() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator.set_nodes_to_aggregate"]], "set_waiting_aggregated_model() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[15, "fedstellar.learning.aggregators.aggregator.Aggregator.set_waiting_aggregated_model"]], "fedavg (class in fedstellar.learning.aggregators.fedavg)": [[16, "fedstellar.learning.aggregators.fedavg.FedAvg"]], "aggregate() (fedstellar.learning.aggregators.fedavg.fedavg method)": [[16, "fedstellar.learning.aggregators.fedavg.FedAvg.aggregate"]], "fedstellar.learning.aggregators.fedavg": [[16, "module-fedstellar.learning.aggregators.fedavg"]], "decodingparamserror": [[17, "fedstellar.learning.exceptions.DecodingParamsError"]], "modelnotmatchingerror": [[17, "fedstellar.learning.exceptions.ModelNotMatchingError"]], "fedstellar.learning.exceptions": [[17, "module-fedstellar.learning.exceptions"]], "nodelearner (class in fedstellar.learning.learner)": [[18, "fedstellar.learning.learner.NodeLearner"]], "check_parameters() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.check_parameters"]], "close() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.close"]], "create_trainer() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.create_trainer"]], "decode_parameters() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.decode_parameters"]], "encode_parameters() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.encode_parameters"]], "evaluate() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.evaluate"]], "fedstellar.learning.learner": [[18, "module-fedstellar.learning.learner"]], "finalize_round() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.finalize_round"]], "fit() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.fit"]], "get_num_samples() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.get_num_samples"]], "get_parameters() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.get_parameters"]], "init() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.init"]], "interrupt_fit() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.interrupt_fit"]], "log_validation_metrics() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.log_validation_metrics"]], "set_data() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.set_data"]], "set_epochs() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.set_epochs"]], "set_model() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.set_model"]], "set_parameters() (fedstellar.learning.learner.nodelearner method)": [[18, "fedstellar.learning.learner.NodeLearner.set_parameters"]], "fedstellar.learning.pytorch": [[19, "module-fedstellar.learning.pytorch"]], "lightninglearner (class in fedstellar.learning.pytorch.lightninglearner)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner"]], "check_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.check_parameters"]], "close() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.close"]], "create_trainer() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.create_trainer"]], "decode_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.decode_parameters"]], "encode_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.encode_parameters"]], "evaluate() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.evaluate"]], "fedstellar.learning.pytorch.lightninglearner": [[20, "module-fedstellar.learning.pytorch.lightninglearner"]], "finalize_round() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.finalize_round"]], "fit() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.fit"]], "get_num_samples() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.get_num_samples"]], "get_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.get_parameters"]], "init() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.init"]], "interrupt_fit() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.interrupt_fit"]], "log_validation_metrics() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.log_validation_metrics"]], "set_data() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.set_data"]], "set_epochs() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.set_epochs"]], "set_model() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.set_model"]], "set_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[20, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.set_parameters"]], "node (class in fedstellar.node)": [[26, "fedstellar.node.Node"]], "add_model() (fedstellar.node.node method)": [[26, "fedstellar.node.Node.add_model"]], "aggregator (fedstellar.node.node attribute)": [[26, "fedstellar.node.Node.aggregator"]], "connect_to() (fedstellar.node.node method)": [[26, "fedstellar.node.Node.connect_to"]], "fedstellar.node": [[26, "module-fedstellar.node"]], "learner (fedstellar.node.node attribute)": [[26, "fedstellar.node.Node.learner"]], "round (fedstellar.node.node attribute)": [[26, "fedstellar.node.Node.round"]], "set_data() (fedstellar.node.node method)": [[26, "fedstellar.node.Node.set_data"]], "set_model() (fedstellar.node.node method)": [[26, "fedstellar.node.Node.set_model"]], "set_start_learning() (fedstellar.node.node method)": [[26, "fedstellar.node.Node.set_start_learning"]], "set_stop_learning() (fedstellar.node.node method)": [[26, "fedstellar.node.Node.set_stop_learning"]], "stop() (fedstellar.node.node method)": [[26, "fedstellar.node.Node.stop"]], "totalrounds (fedstellar.node.node attribute)": [[26, "fedstellar.node.Node.totalrounds"]], "update() (fedstellar.node.node method)": [[26, "fedstellar.node.Node.update"]], "nodeconnection (class in fedstellar.node_connection)": [[27, "fedstellar.node_connection.NodeConnection"]], "add_models_aggregated() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.add_models_aggregated"]], "add_param_segment() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.add_param_segment"]], "add_processed_messages() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.add_processed_messages"]], "clear_buffer() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.clear_buffer"]], "clear_models_aggregated() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.clear_models_aggregated"]], "fedstellar.node_connection": [[27, "module-fedstellar.node_connection"]], "get_addr() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.get_addr"]], "get_model_initialized() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.get_model_initialized"]], "get_model_ready_status() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.get_model_ready_status"]], "get_models_aggregated() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.get_models_aggregated"]], "get_name() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.get_name"]], "get_params() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.get_params"]], "notify_conn_to() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.notify_conn_to"]], "notify_heartbeat() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.notify_heartbeat"]], "notify_metrics() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.notify_metrics"]], "notify_params() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.notify_params"]], "notify_role() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.notify_role"]], "notify_start_learning() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.notify_start_learning"]], "notify_stop_learning() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.notify_stop_learning"]], "notify_train_set_votes() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.notify_train_set_votes"]], "run() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.run"]], "send() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.send"]], "set_model_initialized() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.set_model_initialized"]], "set_model_ready_status() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.set_model_ready_status"]], "set_transfer_leadership() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.set_transfer_leadership"]], "start() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.start"]], "stop() (fedstellar.node_connection.nodeconnection method)": [[27, "fedstellar.node_connection.NodeConnection.stop"]], "fedstellar.node_start": [[28, "module-fedstellar.node_start"]], "main() (in module fedstellar.node_start)": [[28, "fedstellar.node_start.main"]], "aggregator (fedstellar.role.role attribute)": [[29, "fedstellar.role.Role.AGGREGATOR"]], "idle (fedstellar.role.role attribute)": [[29, "fedstellar.role.Role.IDLE"]], "proxy (fedstellar.role.role attribute)": [[29, "fedstellar.role.Role.PROXY"]], "role (class in fedstellar.role)": [[29, "fedstellar.role.Role"]], "server (fedstellar.role.role attribute)": [[29, "fedstellar.role.Role.SERVER"]], "trainer (fedstellar.role.role attribute)": [[29, "fedstellar.role.Role.TRAINER"]], "fedstellar.role": [[29, "module-fedstellar.role"]], "fedstellar.utils": [[31, "module-fedstellar.utils"]], "collect_env() (in module fedstellar.utils.env)": [[32, "fedstellar.utils.env.collect_env"]], "fedstellar.utils.env": [[32, "module-fedstellar.utils.env"]], "aggregation_finished_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.AGGREGATION_FINISHED_EVENT"]], "beat_received_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.BEAT_RECEIVED_EVENT"]], "conn_to_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.CONN_TO_EVENT"]], "end_connection_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.END_CONNECTION_EVENT"]], "events (class in fedstellar.utils.observer)": [[33, "fedstellar.utils.observer.Events"]], "gossip_broadcast_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.GOSSIP_BROADCAST_EVENT"]], "metrics_received_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.METRICS_RECEIVED_EVENT"]], "node_connected_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.NODE_CONNECTED_EVENT"]], "observable (class in fedstellar.utils.observer)": [[33, "fedstellar.utils.observer.Observable"]], "observer (class in fedstellar.utils.observer)": [[33, "fedstellar.utils.observer.Observer"]], "params_received_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.PARAMS_RECEIVED_EVENT"]], "processed_messages_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.PROCESSED_MESSAGES_EVENT"]], "report_status_to_controller_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.REPORT_STATUS_TO_CONTROLLER_EVENT"]], "role_received_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.ROLE_RECEIVED_EVENT"]], "send_beat_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.SEND_BEAT_EVENT"]], "send_role_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.SEND_ROLE_EVENT"]], "start_learning_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.START_LEARNING_EVENT"]], "stop_learning_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.STOP_LEARNING_EVENT"]], "store_model_parameters_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.STORE_MODEL_PARAMETERS_EVENT"]], "train_set_vote_received_event (fedstellar.utils.observer.events attribute)": [[33, "fedstellar.utils.observer.Events.TRAIN_SET_VOTE_RECEIVED_EVENT"]], "add_observer() (fedstellar.utils.observer.observable method)": [[33, "fedstellar.utils.observer.Observable.add_observer"]], "fedstellar.utils.observer": [[33, "module-fedstellar.utils.observer"]], "get_observers() (fedstellar.utils.observer.observable method)": [[33, "fedstellar.utils.observer.Observable.get_observers"]], "notify() (fedstellar.utils.observer.observable method)": [[33, "fedstellar.utils.observer.Observable.notify"]], "update() (fedstellar.utils.observer.observer method)": [[33, "fedstellar.utils.observer.Observer.update"]], "topologymanager (class in fedstellar.utils.topologymanager)": [[34, "fedstellar.utils.topologymanager.TopologyManager"]], "add_nodes() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.add_nodes"]], "draw_graph() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.draw_graph"]], "fedstellar.utils.topologymanager": [[34, "module-fedstellar.utils.topologymanager"]], "generate_custom_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.generate_custom_topology"]], "generate_ring_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.generate_ring_topology"]], "generate_server_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.generate_server_topology"]], "generate_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.generate_topology"]], "get_matrix_adjacency_from_neighbors() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.get_matrix_adjacency_from_neighbors"]], "get_neighbors() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.get_neighbors"]], "get_neighbors_string() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.get_neighbors_string"]], "get_node() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.get_node"]], "get_nodes() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.get_nodes"]], "get_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.get_topology"]], "update_nodes() (fedstellar.utils.topologymanager.topologymanager method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.update_nodes"]], "update_topology_3d_json() (fedstellar.utils.topologymanager.topologymanager static method)": [[34, "fedstellar.utils.topologymanager.TopologyManager.update_topology_3d_json"]], "test": [[37, "module-test"]], "four_nodes() (in module test.basenode_test)": [[38, "test.basenode_test.four_nodes"]], "test.basenode_test": [[38, "module-test.basenode_test"]], "test_bad_msg() (in module test.basenode_test)": [[38, "test.basenode_test.test_bad_msg"]], "test_connect_invalid_node() (in module test.basenode_test)": [[38, "test.basenode_test.test_connect_invalid_node"]], "test_full_connected() (in module test.basenode_test)": [[38, "test.basenode_test.test_full_connected"]], "test_multimsg() (in module test.basenode_test)": [[38, "test.basenode_test.test_multimsg"]], "test_node_abrupt_down() (in module test.basenode_test)": [[38, "test.basenode_test.test_node_abrupt_down"]], "test_node_paring() (in module test.basenode_test)": [[38, "test.basenode_test.test_node_paring"]], "test_non_full_connected() (in module test.basenode_test)": [[38, "test.basenode_test.test_non_full_connected"]], "test_socket() (in module test.basenode_test)": [[38, "test.basenode_test.test_socket"]], "two_nodes() (in module test.basenode_test)": [[38, "test.basenode_test.two_nodes"]], "test.controller_test": [[39, "module-test.controller_test"]], "test_env() (in module test.controller_test)": [[39, "test.controller_test.test_env"]], "test_mender_deploy_artifact() (in module test.controller_test)": [[39, "test.controller_test.test_mender_deploy_artifact"]], "test_mender_get_artifacts() (in module test.controller_test)": [[39, "test.controller_test.test_mender_get_artifacts"]], "test_mender_get_connected_device() (in module test.controller_test)": [[39, "test.controller_test.test_mender_get_connected_device"]], "test_mender_get_info_deployment() (in module test.controller_test)": [[39, "test.controller_test.test_mender_get_info_deployment"]], "test_mender_get_info_device() (in module test.controller_test)": [[39, "test.controller_test.test_mender_get_info_device"]], "test_mender_get_users() (in module test.controller_test)": [[39, "test.controller_test.test_mender_get_users"]], "test_mender_upload_artifact() (in module test.controller_test)": [[39, "test.controller_test.test_mender_upload_artifact"]], "test.encryption_test": [[40, "module-test.encryption_test"]], "test_aes_encryption_decription1() (in module test.encryption_test)": [[40, "test.encryption_test.test_aes_encryption_decription1"]], "test_aes_encryption_decription2() (in module test.encryption_test)": [[40, "test.encryption_test.test_aes_encryption_decription2"]], "test_aes_encryption_decription_model() (in module test.encryption_test)": [[40, "test.encryption_test.test_aes_encryption_decription_model"]], "test_rsa_encryption_decription1() (in module test.encryption_test)": [[40, "test.encryption_test.test_rsa_encryption_decription1"]], "test_rsa_encryption_decription2() (in module test.encryption_test)": [[40, "test.encryption_test.test_rsa_encryption_decription2"]], "test.learning_test": [[41, "module-test.learning_test"]], "test_avg_complex() (in module test.learning_test)": [[41, "test.learning_test.test_avg_complex"]], "test_avg_simple() (in module test.learning_test)": [[41, "test.learning_test.test_avg_simple"]], "test_encoding() (in module test.learning_test)": [[41, "test.learning_test.test_encoding"]], "four_nodes() (in module test.node_test)": [[42, "test.node_test.four_nodes"]], "test.node_test": [[42, "module-test.node_test"]], "test_bad_binary_model() (in module test.node_test)": [[42, "test.node_test.test_bad_binary_model"]], "test_connect_while_training() (in module test.node_test)": [[42, "test.node_test.test_connect_while_training"]], "test_convergence() (in module test.node_test)": [[42, "test.node_test.test_convergence"]], "test_encrypted_convergence() (in module test.node_test)": [[42, "test.node_test.test_encrypted_convergence"]], "test_interrupt_train() (in module test.node_test)": [[42, "test.node_test.test_interrupt_train"]], "test_line_network_learning() (in module test.node_test)": [[42, "test.node_test.test_line_network_learning"]], "test_node_down_on_learning() (in module test.node_test)": [[42, "test.node_test.test_node_down_on_learning"]], "test_ring_network_learning() (in module test.node_test)": [[42, "test.node_test.test_ring_network_learning"]], "test_star_network_learning() (in module test.node_test)": [[42, "test.node_test.test_star_network_learning"]], "test_wrong_model() (in module test.node_test)": [[42, "test.node_test.test_wrong_model"]], "two_nodes() (in module test.node_test)": [[42, "test.node_test.two_nodes"]], "test.participants_test": [[43, "module-test.participants_test"]], "test_check_gpu() (in module test.participants_test)": [[43, "test.participants_test.test_check_gpu"]], "test_yaml_file() (in module test.participants_test)": [[43, "test.participants_test.test_yaml_file"]], "test.topologymanager_test": [[44, "module-test.topologymanager_test"]], "test_ring_topology() (in module test.topologymanager_test)": [[44, "test.topologymanager_test.test_ring_topology"]], "test_ring_topology2() (in module test.topologymanager_test)": [[44, "test.topologymanager_test.test_ring_topology2"]], "test_topology() (in module test.topologymanager_test)": [[44, "test.topologymanager_test.test_topology"]], "test_topology_6() (in module test.topologymanager_test)": [[44, "test.topologymanager_test.test_topology_6"]], "test_topology_centralized() (in module test.topologymanager_test)": [[44, "test.topologymanager_test.test_topology_centralized"]], "check_equal_models() (in module test.utils)": [[45, "test.utils.check_equal_models"]], "set_test_settings() (in module test.utils)": [[45, "test.utils.set_test_settings"]], "test.utils": [[45, "module-test.utils"]], "wait_4_results() (in module test.utils)": [[45, "test.utils.wait_4_results"]], "wait_network_nodes() (in module test.utils)": [[45, "test.utils.wait_network_nodes"]]}})