Search.setIndex({"docnames": ["fedstellar", "fedstellar.base_node", "fedstellar.command", "fedstellar.communication_protocol", "fedstellar.config", "fedstellar.config.config", "fedstellar.config.mender", "fedstellar.encrypter", "fedstellar.gossiper", "fedstellar.heartbeater", "fedstellar.learning", "fedstellar.learning.aggregators", "fedstellar.learning.aggregators.aggregator", "fedstellar.learning.aggregators.fedavg", "fedstellar.learning.exceptions", "fedstellar.learning.learner", "fedstellar.learning.pytorch", "fedstellar.learning.pytorch.lightninglearner", "fedstellar.learning.pytorch.mnist_examples", "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm", "fedstellar.learning.pytorch.mnist_examples.models", "fedstellar.learning.pytorch.mnist_examples.models.cnn", "fedstellar.learning.pytorch.mnist_examples.models.mlp", "fedstellar.node", "fedstellar.node_connection", "fedstellar.role", "fedstellar.utils", "fedstellar.utils.env", "fedstellar.utils.observer", "fedstellar.utils.topologymanager", "index", "modules", "test", "test.basenode_test", "test.controller_test", "test.encryption_test", "test.learning_test", "test.node_test", "test.participants_test", "test.topologymanager_test", "test.utils"], "filenames": ["fedstellar.rst", "fedstellar.base_node.rst", "fedstellar.command.rst", "fedstellar.communication_protocol.rst", "fedstellar.config.rst", "fedstellar.config.config.rst", "fedstellar.config.mender.rst", "fedstellar.encrypter.rst", "fedstellar.gossiper.rst", "fedstellar.heartbeater.rst", "fedstellar.learning.rst", "fedstellar.learning.aggregators.rst", "fedstellar.learning.aggregators.aggregator.rst", "fedstellar.learning.aggregators.fedavg.rst", "fedstellar.learning.exceptions.rst", "fedstellar.learning.learner.rst", "fedstellar.learning.pytorch.rst", "fedstellar.learning.pytorch.lightninglearner.rst", "fedstellar.learning.pytorch.mnist_examples.rst", "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.rst", "fedstellar.learning.pytorch.mnist_examples.models.rst", "fedstellar.learning.pytorch.mnist_examples.models.cnn.rst", "fedstellar.learning.pytorch.mnist_examples.models.mlp.rst", "fedstellar.node.rst", "fedstellar.node_connection.rst", "fedstellar.role.rst", "fedstellar.utils.rst", "fedstellar.utils.env.rst", "fedstellar.utils.observer.rst", "fedstellar.utils.topologymanager.rst", "index.rst", "modules.rst", "test.rst", "test.basenode_test.rst", "test.controller_test.rst", "test.encryption_test.rst", "test.learning_test.rst", "test.node_test.rst", "test.participants_test.rst", "test.topologymanager_test.rst", "test.utils.rst"], "titles": ["fedstellar package", "fedstellar.base_node module", "fedstellar.command module", "fedstellar.communication_protocol module", "fedstellar.config package", "fedstellar.config.config module", "fedstellar.config.mender module", "fedstellar.encrypter module", "fedstellar.gossiper module", "fedstellar.heartbeater module", "fedstellar.learning package", "fedstellar.learning.aggregators package", "fedstellar.learning.aggregators.aggregator module", "fedstellar.learning.aggregators.fedavg module", "fedstellar.learning.exceptions module", "fedstellar.learning.learner module", "fedstellar.learning.pytorch package", "fedstellar.learning.pytorch.lightninglearner module", "fedstellar.learning.pytorch.mnist_examples package", "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm module", "fedstellar.learning.pytorch.mnist_examples.models package", "fedstellar.learning.pytorch.mnist_examples.models.cnn module", "fedstellar.learning.pytorch.mnist_examples.models.mlp module", "fedstellar.node module", "fedstellar.node_connection module", "fedstellar.role module", "fedstellar.utils package", "fedstellar.utils.env module", "fedstellar.utils.observer module", "fedstellar.utils.topologymanager module", "&lt;no title&gt;", "fedstellar", "test package", "test.basenode_test module", "test.controller_test module", "test.encryption_test module", "test.learning_test module", "test.node_test module", "test.participants_test module", "test.topologymanager_test module", "test.utils module"], "terms": {"config": [0, 1, 3, 8, 9, 12, 13, 23, 24, 31, 38], "mender": [0, 4], "learn": [0, 3, 23, 28, 30, 31], "aggreg": [0, 3, 10, 23, 24, 25, 28], "pytorch": [0, 10, 23], "except": [0, 3, 10], "decodingparamserror": [0, 10, 14, 15, 17], "modelnotmatchingerror": [0, 10, 14, 15, 17], "learner": [0, 10, 17, 23], "nodelearn": [0, 10, 15, 17, 23], "util": [0, 31, 32], "env": [0, 26], "collect_env": [0, 26, 27], "observ": [0, 1, 8, 9, 12, 23, 24, 26], "event": [0, 1, 23, 26, 28], "topologymanag": [0, 26], "base_nod": [0, 31], "basenod": [0, 1, 23, 31], "host": [0, 1, 23, 28], "port": [0, 1, 3, 23, 24, 28], "simul": [0, 1, 23], "heartbeat": [0, 1, 24, 31], "gossip": [0, 1, 3, 28, 31], "broadcast": [0, 1, 3], "connect_to": [0, 1, 3, 23], "disconnect_from": [0, 1], "get_addr": [0, 1, 24], "get_nam": [0, 1, 24], "get_neighbor": [0, 1, 26, 29], "get_network_nod": [0, 1], "rm_neighbor": [0, 1], "run": [0, 1, 8, 9, 11, 12, 23, 24], "setup_log": [0, 1], "start": [0, 1, 3, 12, 23, 24, 28], "stop": [0, 1, 2, 3, 8, 9, 23, 24, 28], "updat": [0, 1, 23, 26, 28], "command": [0, 24, 31], "beat_cmd": [0, 2, 31], "execut": [0, 1, 2, 3], "conn_to_cmd": [0, 2, 31], "metrics_cmd": [0, 2, 31], "model_initialized_cmd": [0, 2, 31], "models_ready_cmd": [0, 2, 31], "models_aggregated_cmd": [0, 2, 31], "params_cmd": [0, 2, 31], "role_cmd": [0, 2, 31], "start_learning_cmd": [0, 2, 31], "stop_cmd": [0, 2, 31], "stop_learning_cmd": [0, 2, 31], "vote_train_set_cmd": [0, 2, 31], "communication_protocol": [0, 31], "communicationprotocol": [0, 1, 3, 24, 31], "command_dict": [0, 3], "last_messag": [0, 3], "beat": [0, 2, 3, 9, 28], "conn": [0, 3], "conn_to": [0, 2, 3, 24], "metric": [0, 1, 2, 3, 15, 17, 21, 22, 23, 24, 28], "models_aggreg": [0, 2, 3], "models_aggregated_clos": [0, 3], "models_readi": [0, 3], "model_initi": [0, 2, 3], "param": [0, 2, 3, 15, 17, 24, 28], "params_clos": [0, 3], "role": [0, 2, 3, 9, 12, 13, 23, 24, 28, 31], "start_learn": [0, 2, 3], "stop_learn": [0, 2, 3], "vote_train_set": [0, 3], "vote_train_set_clos": [0, 3], "add_processed_messag": [0, 3, 24], "build_beat_msg": [0, 3], "build_connect_msg": [0, 3], "build_connect_to_msg": [0, 3], "build_metrics_msg": [0, 3], "build_model_initialized_msg": [0, 3], "build_models_aggregated_msg": [0, 3], "build_models_ready_msg": [0, 3], "build_params_msg": [0, 3], "build_role_msg": [0, 3], "build_start_learning_msg": [0, 3], "build_stop_learning_msg": [0, 3], "build_stop_msg": [0, 3], "build_vote_train_set_msg": [0, 3], "check_collaps": [0, 3], "check_params_incomplet": [0, 3], "generate_hased_messag": [0, 3], "process_connect": [0, 3], "process_messag": [0, 3], "encrypt": [0, 1, 23, 31], "aesciph": [0, 7, 31], "add_pad": [0, 7], "decrypt": [0, 7], "get_block_s": [0, 7], "get_kei": [0, 7], "key_len": [0, 7], "rsaciph": [0, 7, 31], "load_pair_public_kei": [0, 7], "add_messag": [0, 8], "add_nod": [0, 9, 26, 29], "add_node_rol": [0, 9], "clear_nod": [0, 9], "get_nod": [0, 9, 26, 29], "node": [0, 1, 2, 3, 7, 8, 9, 12, 13, 15, 17, 24, 28, 29, 31, 40], "round": [0, 2, 3, 15, 17, 23, 24, 28], "totalround": [0, 23], "add_model": [0, 11, 12, 23], "set_data": [0, 10, 15, 16, 17, 23], "set_model": [0, 10, 15, 16, 17, 23], "set_start_learn": [0, 23], "set_stop_learn": [0, 23], "node_connect": [0, 2, 31], "nodeconnect": [0, 1, 24, 28, 31], "add_models_aggreg": [0, 24], "add_param_seg": [0, 24], "clear_buff": [0, 24], "clear_models_aggreg": [0, 24], "get_model_initi": [0, 24], "get_model_ready_statu": [0, 24], "get_models_aggreg": [0, 24], "get_param": [0, 24], "notify_conn_to": [0, 24], "notify_heartbeat": [0, 24], "notify_metr": [0, 24], "notify_param": [0, 24], "notify_rol": [0, 24], "notify_start_learn": [0, 24], "notify_stop_learn": [0, 24], "notify_train_set_vot": [0, 24], "send": [0, 3, 8, 9, 24, 28], "set_model_initi": [0, 24], "set_model_ready_statu": [0, 24], "idl": [0, 25], "proxi": [0, 25], "server": [0, 25, 29], "trainer": [0, 15, 17, 25], "class": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 15, 17, 19, 21, 22, 23, 24, 25, 28, 29], "experiment_nam": [1, 23, 29], "127": [1, 23], "0": [1, 3, 19, 21, 22, 23], "1": [1, 7, 19, 21, 23], "none": [1, 5, 7, 12, 13, 15, 17, 19, 21, 22, 23, 24, 28, 29], "true": [1, 3, 12, 15, 17, 19, 23, 24], "sourc": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40], "base": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 28, 29], "thread": [1, 8, 9, 12, 24], "thi": [1, 3, 7, 23, 24, 25], "repres": [1, 2, 24, 28], "network": [1, 3, 21, 23, 24], "without": [1, 24], "fl": 1, "It": [1, 8, 9, 12, 15, 17, 19, 24], "i": [1, 2, 3, 7, 9, 12, 15, 17, 23, 24, 28, 30], "so": [1, 7, 12, 24], "": [1, 19, 24], "go": [1, 2, 24], "process": [1, 3, 12, 15, 17, 23, 24, 28], "all": [1, 3, 9, 12, 24, 28], "messag": [1, 2, 3, 7, 8, 9, 24, 28], "background": [1, 12, 24], "us": [1, 3, 7, 9, 12, 15, 17, 19, 23, 24, 28], "paramet": [1, 2, 3, 7, 8, 9, 12, 13, 14, 15, 17, 19, 23, 24, 28], "str": [1, 6, 7, 8, 12, 22, 23], "The": [1, 2, 3, 7, 12, 15, 17, 19, 23, 24, 28], "int": [1, 7, 23], "bool": [1, 21, 22, 23], "If": [1, 3, 12, 15, 17, 23, 24], "fals": [1, 3, 12, 23, 24, 29], "commun": [1, 3, 8, 9, 23, 24], "type": [1, 3, 7, 9, 12, 23, 28], "mode": 1, "basic": 1, "don": 1, "t": [1, 7, 9, 12, 23], "have": [1, 12, 24], "aren": 1, "sent": [1, 3, 8, 9, 24, 28], "msg": [1, 2, 3, 7, 8, 24, 28], "exc": 1, "thread_saf": 1, "neighbor": [1, 8, 9], "list": [1, 3, 6, 8, 9, 12, 22, 24, 28], "exclud": [1, 12], "access": 1, "safe": 1, "h": [1, 2, 23, 24], "p": [1, 2, 23, 24], "full": [1, 3, 23], "forc": [1, 3, 12, 23, 24, 28], "connect": [1, 2, 3, 23, 24, 28], "anoth": [1, 23, 28], "entir": [1, 3, 23], "even": [1, 12, 23, 24], "though": [1, 23], "should": [1, 2, 3, 23, 24], "return": [1, 3, 7, 9, 12, 15, 17, 23, 24, 28], "ha": [1, 23, 24, 28], "been": [1, 12, 23, 24, 28], "disconnect": 1, "from": [1, 3, 8, 9], "address": [1, 3, 24], "tupl": [1, 3], "name": [1, 8, 9, 12, 15, 17, 23, 24], "get": [1, 7, 9, 12, 15, 17], "n": [1, 28, 37], "remov": [1, 3], "main": [1, 8, 24], "loop": [1, 8, 24], "when": [1, 3, 12, 14, 23, 28], "method": [1, 3, 7, 12, 23], "being": 1, "listen": [1, 23], "new": [1, 12, 23, 24], "them": [1, 24], "log_dir": 1, "too": 1, "note": [1, 23], "an": [1, 3, 7, 12, 14, 28], "instanc": [1, 23], "can": [1, 3, 7, 15, 17, 23, 24, 28], "onli": [1, 3, 23], "onc": 1, "obj": [1, 23, 28], "handl": [1, 23], "occur": [1, 23], "differ": [1, 3, 9, 23, 28], "compon": [1, 23], "inform": 1, "about": 1, "chang": 1, "implement": [2, 15, 28], "pattern": [2, 8, 9, 28], "respons": 2, "node1": 2, "object": [2, 3, 5, 6, 7, 15, 23, 25, 28, 29], "arg": [2, 28], "loss": [2, 3, 15, 17, 24, 28], "readi": [2, 3, 24], "node_list": 2, "done": [2, 12, 28], "epoch": [2, 3, 15, 17, 23, 28], "vote": [2, 3, 24, 28], "manag": [3, 12], "mean": [3, 7], "some": 3, "contain": [3, 23], "hash": 3, "end": [3, 15, 17], "uniqu": 3, "identifi": 3, "kind": [3, 24], "ar": [3, 8, 15, 17, 23, 24, 28], "valid": [3, 15, 17, 19], "classifi": 3, "non": [3, 15, 17, 24], "punct": 3, "over": [3, 19], "2": [3, 24], "ip": [3, 24], "data": [3, 15, 17, 19, 23, 24], "furthermor": 3, "consist": 3, "encod": [3, 7, 15, 17, 23, 28], "text": [3, 7, 24], "utf": [3, 7], "8": [3, 7], "which": [3, 9], "serial": [3, 7], "binari": [3, 15, 17, 24], "static": [3, 6, 7], "build": 3, "handshak": 3, "dictionari": [3, 13], "callback": 3, "last": [3, 24], "receiv": [3, 9, 23, 24, 28], "header": 3, "train": [3, 15, 17, 20, 21, 22], "set": [3, 15, 17, 19, 23, 24], "model": [3, 12, 13, 14, 15, 16, 17, 18, 23, 24, 28], "close": [3, 10, 15, 16, 17, 24, 28], "initi": [3, 24], "add": [3, 7, 8, 9, 12, 23, 24, 28], "ammount": 3, "higher": 3, "than": 3, "amount_last_messages_sav": 3, "oldest": 3, "keep": [3, 7, 24], "size": [3, 19], "Not": 3, "special": 3, "case": [3, 7], "tri": [3, 24], "whether": 3, "were": [3, 12], "calcul": 3, "inici": 3, "string": [3, 12], "indic": [3, 12], "finish": 3, "block_siz": [3, 7], "A": [3, 30], "fragment": 3, "number": [3, 12, 15, 17, 19, 23], "check": [3, 12, 15, 17, 28], "collaps": 3, "fill": [3, 7], "buffer": [3, 24], "befor": 3, "actual": [3, 9, 15, 17], "happen": 3, "length": [3, 7], "byte": [3, 7], "headear": 3, "incomplet": 3, "complet": 3, "need": 3, "given": 3, "gener": [3, 19], "accept": 3, "what": 3, "do": [3, 14], "legit": 3, "wa": [3, 12, 24, 28], "otherwis": [3, 23, 24], "associ": 3, "messages_execut": 3, "error": 3, "get_participant_config": [4, 5], "get_topology_config": [4, 5], "participant_config": [4, 5], "topology_config": [4, 5], "deploy_artifact_devic": [4, 6], "deploy_artifact_list": [4, 6], "generate_artifact": [4, 6], "get_artifact": [4, 6], "get_connected_devic": [4, 6], "get_devic": [4, 6], "get_devices_by_group": [4, 6], "get_info_deploy": [4, 6], "get_info_devic": [4, 6], "get_my_info": [4, 6], "get_token": [4, 6], "renew_token": [4, 6], "upload_artifact": [4, 6], "defin": [5, 23, 25], "constant": 5, "dfl": 5, "system": 5, "topology_config_fil": 5, "participant_config_fil": 5, "global": 5, "artifact_nam": 6, "devic": 6, "type_artifact": 6, "device_typ": 6, "file_path": 6, "device_id": 6, "group": 6, "deployment_id": 6, "artifact_path": 6, "descript": 6, "kei": 7, "ae": 7, "symetr": 7, "pad": 7, "charactet": 7, "rest": 7, "block": 7, "care": [7, 23, 24], "content": [7, 24, 31], "doesn": 7, "affect": 7, "decript": 7, "share": [7, 23], "mind": 7, "cipher": 7, "sould": 7, "rsa": 7, "asymetr": 7, "privat": 7, "public": 7, "pair": 7, "other": [7, 15, 17, 23, 24], "base64": 7, "load": 7, "node_nam": [8, 9, 12, 13], "pend": 8, "gossip_messages_per_round": 8, "per": [8, 9], "iter": 8, "gossip_frec": 8, "time": 8, "second": [8, 9], "via": [8, 9], "nodo_padr": [8, 9], "parent": [8, 24], "gossip_model_sends_by_round": 8, "everi": 9, "heartbeat_period": 9, "also": [9, 12, 15, 17, 24], "maintain": 9, "activ": 9, "creat": [9, 15, 17, 24], "heartbear": 9, "node_timeout": 9, "elimin": 9, "clear": [9, 11, 12, 24], "haven": 9, "happend": 9, "heartbeater_refresh_neighbors_by_period": 9, "fedavg": [10, 11], "mnist_exampl": [10, 16], "lightninglearn": [10, 16, 23], "check_paramet": [10, 15, 16, 17], "create_train": [10, 15, 16, 17], "decode_paramet": [10, 15, 16, 17], "encode_paramet": [10, 15, 16, 17], "evalu": [10, 15, 16, 17], "finalize_round": [10, 15, 16, 17], "fit": [10, 15, 16, 17], "get_num_sampl": [10, 15, 16, 17], "get_paramet": [10, 15, 16, 17], "init": [10, 15, 16, 17], "interrupt_fit": [10, 15, 16, 17], "log_validation_metr": [10, 15, 16, 17], "set_epoch": [10, 15, 16, 17], "set_paramet": [10, 15, 16, 17], "check_and_run_aggreg": [11, 12], "get_partial_aggreg": [11, 12], "set_nodes_to_aggreg": [11, 12], "set_waiting_aggregated_model": [11, 12], "unknown": [12, 13], "ad": [12, 24], "timeout": [12, 23], "gone": 12, "notifi": [12, 24, 26, 28], "weight": [12, 15, 17, 23], "first": [12, 23], "collabor": [12, 30], "sampl": [12, 15, 17], "except_nod": 12, "partial": 12, "wait": [12, 23], "Then": 12, "listnod": 12, "empti": 12, "won": 12, "particip": [12, 23, 25, 28], "feder": [13, 23, 30], "averag": 13, "mcmahan": 13, "et": 13, "al": 13, "2016": 13, "paper": 13, "http": 13, "arxiv": 13, "org": 13, "ab": 13, "1602": 13, "05629": 13, "ponder": 13, "num_sampl": 13, "rais": [14, 15, 17], "decod": [14, 15, 17], "fail": [14, 15, 17], "match": [14, 15, 17], "templat": 15, "includ": 15, "monitor": 15, "dure": 15, "compat": [15, 17, 23], "contributor": [15, 17, 23], "provid": [15, 17], "self": [15, 17], "determin": [15, 17, 24], "interrupt": [15, 17], "log": [15, 17], "wheight": [15, 17], "mnistfederated_dm": [16, 18], "mnistfederateddm": [16, 18, 19], "logger": 17, "log_nam": 17, "lightn": [17, 21, 22], "atribut": 17, "cnn": [18, 20], "mlp": [18, 20], "mnist_train": [18, 19], "mnist_val": [18, 19], "test_dataload": [18, 19], "train_dataload": [18, 19], "val_dataload": [18, 19], "sub_id": 19, "number_sub": 19, "batch_siz": 19, "32": 19, "num_work": 19, "4": 19, "val_perc": 19, "iid": 19, "lightningdatamodul": 19, "partit": 19, "mnist": [19, 21, 22], "distribucion": 19, "mni": 19, "toi": 19, "problem": 19, "subset": 19, "id": 19, "batch": [19, 21, 22], "worker": 19, "percentag": 19, "configure_optim": [20, 21, 22], "forward": [20, 21, 22], "test_step": [20, 21, 22], "training_step": [20, 21, 22], "validation_step": [20, 21, 22], "training_epoch_end": [20, 22], "in_channel": 21, "out_channel": [21, 22], "10": [21, 22], "accuraci": [21, 22], "lr_rate": [21, 22], "001": [21, 22], "seed": [21, 22], "lightningmodul": [21, 22], "convolut": 21, "neural": 21, "solv": [21, 22], "x": [21, 22, 37], "batch_idx": [21, 22], "batch_id": [21, 22], "torchmetr": 22, "classif": 22, "multilay": 22, "perceptron": 22, "output": 22, "union": 22, "tensor": 22, "dict": 22, "ani": [22, 30], "idx": 23, "allow": 23, "p2p": 23, "save": 23, "under": 23, "folder": 23, "dataset": 23, "where": 23, "default": 23, "total": 23, "m": 23, "isn": 23, "inicializ": 23, "reciev": 23, "produc": 23, "carefulli": 23, "In": 23, "function": 23, "one": 23, "control": 23, "after": 23, "thei": 23, "start_learning_ev": [23, 24, 26, 28], "parent_node_nam": 24, "addr": 24, "aes_ciph": 24, "tcp_buffer_s": 24, "option": 24, "mani": 24, "singl": 24, "recv": 24, "exist": 24, "Be": 24, "broken": 24, "user": [24, 38], "want": 24, "reconnect": 24, "he": 24, "she": 24, "parent_nod": 24, "socket": 24, "segment": 24, "protocol": 24, "By": 24, "avoid": 24, "multipl": 24, "same": 24, "cycl": 24, "r": 24, "e": [24, 30], "cmd": 24, "valu": 24, "aliv": 24, "local": 24, "framework": [25, 30], "aggregation_finished_ev": [26, 28], "beat_received_ev": [26, 28], "conn_to_ev": [26, 28], "end_connection_ev": [26, 28], "gossip_broadcast_ev": [26, 28], "metrics_received_ev": [26, 28], "node_connected_ev": [26, 28], "params_received_ev": [26, 28], "processed_messages_ev": [26, 28], "role_received_ev": [26, 28], "send_beat_ev": [26, 28], "send_role_ev": [26, 28], "stop_learning_ev": [26, 28], "train_set_vote_received_ev": [26, 28], "add_observ": [26, 28], "get_observ": [26, 28], "draw_graph": [26, 29], "generate_custom_topologi": [26, 29], "generate_ring_topologi": [26, 29], "generate_topologi": [26, 29], "get_neighbors_str": [26, 29], "get_topologi": [26, 29], "must": 28, "pass": 28, "For": [28, 30], "each": 28, "n_node": 29, "b_symmetr": 29, "undirected_neighbor_num": 29, "5": 29, "topologi": 29, "node_idx": 29, "fedstellar": [30, 38], "fordecentr": 30, "python": 30, "packag": [30, 31], "deploy": 30, "decentr": 30, "architectur": 30, "develop": 30, "enriqu": [30, 38], "tom\u00e1": 30, "mart\u00ednez": 30, "beltr\u00e1n": 30, "univers": 30, "murcia": 30, "armasuiss": 30, "question": 30, "pleas": 30, "contact": 30, "enriquetoma": 30, "um": 30, "test": [30, 31], "index": 30, "modul": [30, 31], "subpackag": 31, "submodul": 31, "basenode_test": [31, 32], "four_nod": [31, 32, 33, 37], "test_bad_msg": [31, 32, 33], "test_connect_invalid_nod": [31, 32, 33], "test_full_connect": [31, 32, 33], "test_multimsg": [31, 32, 33], "test_node_abrupt_down": [31, 32, 33], "test_node_par": [31, 32, 33], "test_non_full_connect": [31, 32, 33], "two_nod": [31, 32, 33, 37], "controller_test": [31, 32], "test_env": [31, 32, 34], "test_mender_deploy_artifact": [31, 32, 34], "test_mender_get_artifact": [31, 32, 34], "test_mender_get_connected_devic": [31, 32, 34], "test_mender_get_info_deploy": [31, 32, 34], "test_mender_get_info_devic": [31, 32, 34], "test_mender_get_us": [31, 32, 34], "test_mender_upload_artifact": [31, 32, 34], "encryption_test": [31, 32], "test_aes_encryption_decription1": [31, 32, 35], "test_aes_encryption_decription2": [31, 32, 35], "test_aes_encryption_decription_model": [31, 32, 35], "test_rsa_encryption_decription1": [31, 32, 35], "test_rsa_encryption_decription2": [31, 32, 35], "learning_test": [31, 32], "test_avg_complex": [31, 32, 36], "test_avg_simpl": [31, 32, 36], "test_encod": [31, 32, 36], "node_test": [31, 32], "test_bad_binary_model": [31, 32, 37], "test_connect_while_train": [31, 32, 37], "test_converg": [31, 32, 37], "test_encrypted_converg": [31, 32, 37], "test_interrupt_train": [31, 32, 37], "test_line_network_learn": [31, 32, 37], "test_node_down_on_learn": [31, 32, 37], "test_ring_network_learn": [31, 32, 37], "test_star_network_learn": [31, 32, 37], "test_wrong_model": [31, 32, 37], "participants_test": [31, 32], "test_check_gpu": [31, 32, 38], "test_yaml_fil": [31, 32, 38], "topologymanager_test": [31, 32], "test_ring_topologi": [31, 32, 39], "test_ring_topology2": [31, 32, 39], "test_topologi": [31, 32, 39], "test_topology_6": [31, 32, 39], "test_topology_centr": [31, 32, 39], "check_equal_model": [31, 32, 40], "set_test_set": [31, 32, 40], "wait_4_result": [31, 32, 40], "wait_network_nod": [31, 32, 40], "scenario_config": 38, "document": 38, "phd": 38, "yaml": 38}, "objects": {"": [[0, 0, 0, "-", "fedstellar"], [32, 0, 0, "-", "test"]], "fedstellar": [[1, 0, 0, "-", "base_node"], [2, 0, 0, "-", "command"], [3, 0, 0, "-", "communication_protocol"], [4, 0, 0, "-", "config"], [7, 0, 0, "-", "encrypter"], [8, 0, 0, "-", "gossiper"], [9, 0, 0, "-", "heartbeater"], [10, 0, 0, "-", "learning"], [23, 0, 0, "-", "node"], [24, 0, 0, "-", "node_connection"], [25, 0, 0, "-", "role"], [26, 0, 0, "-", "utils"]], "fedstellar.base_node": [[1, 1, 1, "", "BaseNode"]], "fedstellar.base_node.BaseNode": [[1, 2, 1, "", "broadcast"], [1, 2, 1, "", "connect_to"], [1, 2, 1, "", "disconnect_from"], [1, 2, 1, "", "get_addr"], [1, 2, 1, "", "get_name"], [1, 2, 1, "", "get_neighbor"], [1, 2, 1, "", "get_neighbors"], [1, 2, 1, "", "get_network_nodes"], [1, 3, 1, "", "gossiper"], [1, 3, 1, "", "heartbeater"], [1, 3, 1, "", "host"], [1, 3, 1, "", "port"], [1, 2, 1, "", "rm_neighbor"], [1, 2, 1, "", "run"], [1, 2, 1, "", "setup_logging"], [1, 3, 1, "", "simulation"], [1, 2, 1, "", "start"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "update"]], "fedstellar.command": [[2, 1, 1, "", "Beat_cmd"], [2, 1, 1, "", "Command"], [2, 1, 1, "", "Conn_to_cmd"], [2, 1, 1, "", "Metrics_cmd"], [2, 1, 1, "", "Model_initialized_cmd"], [2, 1, 1, "", "Models_Ready_cmd"], [2, 1, 1, "", "Models_aggregated_cmd"], [2, 1, 1, "", "Params_cmd"], [2, 1, 1, "", "Role_cmd"], [2, 1, 1, "", "Start_learning_cmd"], [2, 1, 1, "", "Stop_cmd"], [2, 1, 1, "", "Stop_learning_cmd"], [2, 1, 1, "", "Vote_train_set_cmd"]], "fedstellar.command.Beat_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Command": [[2, 2, 1, "", "execute"]], "fedstellar.command.Conn_to_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Metrics_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Model_initialized_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Models_Ready_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Models_aggregated_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Params_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Role_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Start_learning_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Stop_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Stop_learning_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.command.Vote_train_set_cmd": [[2, 2, 1, "", "execute"]], "fedstellar.communication_protocol": [[3, 1, 1, "", "CommunicationProtocol"]], "fedstellar.communication_protocol.CommunicationProtocol": [[3, 3, 1, "", "BEAT"], [3, 3, 1, "", "CONN"], [3, 3, 1, "", "CONN_TO"], [3, 3, 1, "", "METRICS"], [3, 3, 1, "", "MODELS_AGGREGATED"], [3, 3, 1, "", "MODELS_AGGREGATED_CLOSE"], [3, 3, 1, "", "MODELS_READY"], [3, 3, 1, "", "MODEL_INITIALIZED"], [3, 3, 1, "", "PARAMS"], [3, 3, 1, "", "PARAMS_CLOSE"], [3, 3, 1, "", "ROLE"], [3, 3, 1, "", "START_LEARNING"], [3, 3, 1, "", "STOP"], [3, 3, 1, "", "STOP_LEARNING"], [3, 3, 1, "", "VOTE_TRAIN_SET"], [3, 3, 1, "", "VOTE_TRAIN_SET_CLOSE"], [3, 2, 1, "", "add_processed_messages"], [3, 2, 1, "", "build_beat_msg"], [3, 2, 1, "", "build_connect_msg"], [3, 2, 1, "", "build_connect_to_msg"], [3, 2, 1, "", "build_metrics_msg"], [3, 2, 1, "", "build_model_initialized_msg"], [3, 2, 1, "", "build_models_aggregated_msg"], [3, 2, 1, "", "build_models_ready_msg"], [3, 2, 1, "", "build_params_msg"], [3, 2, 1, "", "build_role_msg"], [3, 2, 1, "", "build_start_learning_msg"], [3, 2, 1, "", "build_stop_learning_msg"], [3, 2, 1, "", "build_stop_msg"], [3, 2, 1, "", "build_vote_train_set_msg"], [3, 2, 1, "", "check_collapse"], [3, 2, 1, "", "check_params_incomplete"], [3, 3, 1, "", "command_dict"], [3, 2, 1, "", "generate_hased_message"], [3, 3, 1, "", "last_messages"], [3, 2, 1, "", "process_connection"], [3, 2, 1, "", "process_message"]], "fedstellar.config": [[5, 0, 0, "-", "config"], [6, 0, 0, "-", "mender"]], "fedstellar.config.config": [[5, 1, 1, "", "Config"]], "fedstellar.config.config.Config": [[5, 2, 1, "", "get_participant_config"], [5, 2, 1, "", "get_topology_config"], [5, 3, 1, "", "participant_config"], [5, 3, 1, "", "topology_config"]], "fedstellar.config.mender": [[6, 1, 1, "", "Mender"]], "fedstellar.config.mender.Mender": [[6, 2, 1, "", "deploy_artifact_device"], [6, 2, 1, "", "deploy_artifact_list"], [6, 2, 1, "", "generate_artifact"], [6, 2, 1, "", "get_artifacts"], [6, 2, 1, "", "get_connected_device"], [6, 2, 1, "", "get_devices"], [6, 2, 1, "", "get_devices_by_group"], [6, 2, 1, "", "get_info_deployment"], [6, 2, 1, "", "get_info_device"], [6, 2, 1, "", "get_my_info"], [6, 2, 1, "", "get_token"], [6, 2, 1, "", "renew_token"], [6, 2, 1, "", "upload_artifact"]], "fedstellar.encrypter": [[7, 1, 1, "", "AESCipher"], [7, 1, 1, "", "Encrypter"], [7, 1, 1, "", "RSACipher"]], "fedstellar.encrypter.AESCipher": [[7, 2, 1, "", "add_padding"], [7, 2, 1, "", "decrypt"], [7, 2, 1, "", "encrypt"], [7, 2, 1, "", "get_block_size"], [7, 2, 1, "", "get_key"], [7, 2, 1, "", "key_len"]], "fedstellar.encrypter.Encrypter": [[7, 2, 1, "", "decrypt"], [7, 2, 1, "", "encrypt"], [7, 2, 1, "", "get_key"]], "fedstellar.encrypter.RSACipher": [[7, 2, 1, "", "decrypt"], [7, 2, 1, "", "encrypt"], [7, 2, 1, "", "get_key"], [7, 2, 1, "", "load_pair_public_key"]], "fedstellar.gossiper": [[8, 1, 1, "", "Gossiper"]], "fedstellar.gossiper.Gossiper": [[8, 2, 1, "", "add_messages"], [8, 2, 1, "", "run"], [8, 2, 1, "", "stop"]], "fedstellar.heartbeater": [[9, 1, 1, "", "Heartbeater"]], "fedstellar.heartbeater.Heartbeater": [[9, 2, 1, "", "add_node"], [9, 2, 1, "", "add_node_role"], [9, 2, 1, "", "clear_nodes"], [9, 2, 1, "", "get_nodes"], [9, 2, 1, "", "run"], [9, 2, 1, "", "stop"]], "fedstellar.learning": [[11, 0, 0, "-", "aggregators"], [14, 0, 0, "-", "exceptions"], [15, 0, 0, "-", "learner"], [16, 0, 0, "-", "pytorch"]], "fedstellar.learning.aggregators": [[12, 0, 0, "-", "aggregator"], [13, 0, 0, "-", "fedavg"]], "fedstellar.learning.aggregators.aggregator": [[12, 1, 1, "", "Aggregator"]], "fedstellar.learning.aggregators.aggregator.Aggregator": [[12, 2, 1, "", "add_model"], [12, 2, 1, "", "aggregate"], [12, 2, 1, "", "check_and_run_aggregation"], [12, 2, 1, "", "clear"], [12, 2, 1, "", "get_partial_aggregation"], [12, 2, 1, "", "run"], [12, 2, 1, "", "set_nodes_to_aggregate"], [12, 2, 1, "", "set_waiting_aggregated_model"]], "fedstellar.learning.aggregators.fedavg": [[13, 1, 1, "", "FedAvg"]], "fedstellar.learning.aggregators.fedavg.FedAvg": [[13, 2, 1, "", "aggregate"]], "fedstellar.learning.exceptions": [[14, 4, 1, "", "DecodingParamsError"], [14, 4, 1, "", "ModelNotMatchingError"]], "fedstellar.learning.learner": [[15, 1, 1, "", "NodeLearner"]], "fedstellar.learning.learner.NodeLearner": [[15, 2, 1, "", "check_parameters"], [15, 2, 1, "", "close"], [15, 2, 1, "", "create_trainer"], [15, 2, 1, "", "decode_parameters"], [15, 2, 1, "", "encode_parameters"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "finalize_round"], [15, 2, 1, "", "fit"], [15, 2, 1, "", "get_num_samples"], [15, 2, 1, "", "get_parameters"], [15, 2, 1, "", "init"], [15, 2, 1, "", "interrupt_fit"], [15, 2, 1, "", "log_validation_metrics"], [15, 2, 1, "", "set_data"], [15, 2, 1, "", "set_epochs"], [15, 2, 1, "", "set_model"], [15, 2, 1, "", "set_parameters"]], "fedstellar.learning.pytorch": [[17, 0, 0, "-", "lightninglearner"], [18, 0, 0, "-", "mnist_examples"]], "fedstellar.learning.pytorch.lightninglearner": [[17, 1, 1, "", "LightningLearner"]], "fedstellar.learning.pytorch.lightninglearner.LightningLearner": [[17, 2, 1, "", "check_parameters"], [17, 2, 1, "", "close"], [17, 2, 1, "", "create_trainer"], [17, 2, 1, "", "decode_parameters"], [17, 2, 1, "", "encode_parameters"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "finalize_round"], [17, 2, 1, "", "fit"], [17, 2, 1, "", "get_num_samples"], [17, 2, 1, "", "get_parameters"], [17, 2, 1, "", "init"], [17, 2, 1, "", "interrupt_fit"], [17, 2, 1, "", "log_validation_metrics"], [17, 2, 1, "", "set_data"], [17, 2, 1, "", "set_epochs"], [17, 2, 1, "", "set_model"], [17, 2, 1, "", "set_parameters"]], "fedstellar.learning.pytorch.mnist_examples": [[19, 0, 0, "-", "mnistfederated_dm"], [20, 0, 0, "-", "models"]], "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm": [[19, 1, 1, "", "MnistFederatedDM"]], "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM": [[19, 3, 1, "", "mnist_train"], [19, 3, 1, "", "mnist_val"], [19, 2, 1, "", "test_dataloader"], [19, 2, 1, "", "train_dataloader"], [19, 2, 1, "", "val_dataloader"]], "fedstellar.learning.pytorch.mnist_examples.models": [[21, 0, 0, "-", "cnn"], [22, 0, 0, "-", "mlp"]], "fedstellar.learning.pytorch.mnist_examples.models.cnn": [[21, 1, 1, "", "CNN"]], "fedstellar.learning.pytorch.mnist_examples.models.cnn.CNN": [[21, 2, 1, "", "configure_optimizers"], [21, 2, 1, "", "forward"], [21, 2, 1, "", "test_step"], [21, 3, 1, "", "training"], [21, 2, 1, "", "training_step"], [21, 2, 1, "", "validation_step"]], "fedstellar.learning.pytorch.mnist_examples.models.mlp": [[22, 1, 1, "", "MLP"]], "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP": [[22, 2, 1, "", "configure_optimizers"], [22, 2, 1, "", "forward"], [22, 2, 1, "", "test_step"], [22, 3, 1, "", "training"], [22, 2, 1, "", "training_epoch_end"], [22, 2, 1, "", "training_step"], [22, 2, 1, "", "validation_step"]], "fedstellar.node": [[23, 1, 1, "", "Node"]], "fedstellar.node.Node": [[23, 2, 1, "", "add_model"], [23, 3, 1, "", "aggregator"], [23, 2, 1, "", "connect_to"], [23, 3, 1, "", "learner"], [23, 3, 1, "", "round"], [23, 2, 1, "", "set_data"], [23, 2, 1, "", "set_model"], [23, 2, 1, "", "set_start_learning"], [23, 2, 1, "", "set_stop_learning"], [23, 2, 1, "", "stop"], [23, 3, 1, "", "totalrounds"], [23, 2, 1, "", "update"]], "fedstellar.node_connection": [[24, 1, 1, "", "NodeConnection"]], "fedstellar.node_connection.NodeConnection": [[24, 2, 1, "", "add_models_aggregated"], [24, 2, 1, "", "add_param_segment"], [24, 2, 1, "", "add_processed_messages"], [24, 2, 1, "", "clear_buffer"], [24, 2, 1, "", "clear_models_aggregated"], [24, 2, 1, "", "get_addr"], [24, 2, 1, "", "get_model_initialized"], [24, 2, 1, "", "get_model_ready_status"], [24, 2, 1, "", "get_models_aggregated"], [24, 2, 1, "", "get_name"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "notify_conn_to"], [24, 2, 1, "", "notify_heartbeat"], [24, 2, 1, "", "notify_metrics"], [24, 2, 1, "", "notify_params"], [24, 2, 1, "", "notify_role"], [24, 2, 1, "", "notify_start_learning"], [24, 2, 1, "", "notify_stop_learning"], [24, 2, 1, "", "notify_train_set_votes"], [24, 2, 1, "", "run"], [24, 2, 1, "", "send"], [24, 2, 1, "", "set_model_initialized"], [24, 2, 1, "", "set_model_ready_status"], [24, 2, 1, "", "start"], [24, 2, 1, "", "stop"]], "fedstellar.role": [[25, 1, 1, "", "Role"]], "fedstellar.role.Role": [[25, 3, 1, "", "AGGREGATOR"], [25, 3, 1, "", "IDLE"], [25, 3, 1, "", "PROXY"], [25, 3, 1, "", "SERVER"], [25, 3, 1, "", "TRAINER"]], "fedstellar.utils": [[27, 0, 0, "-", "env"], [28, 0, 0, "-", "observer"], [29, 0, 0, "-", "topologymanager"]], "fedstellar.utils.env": [[27, 5, 1, "", "collect_env"]], "fedstellar.utils.observer": [[28, 1, 1, "", "Events"], [28, 1, 1, "", "Observable"], [28, 1, 1, "", "Observer"]], "fedstellar.utils.observer.Events": [[28, 3, 1, "", "AGGREGATION_FINISHED_EVENT"], [28, 3, 1, "", "BEAT_RECEIVED_EVENT"], [28, 3, 1, "", "CONN_TO_EVENT"], [28, 3, 1, "", "END_CONNECTION_EVENT"], [28, 3, 1, "", "GOSSIP_BROADCAST_EVENT"], [28, 3, 1, "", "METRICS_RECEIVED_EVENT"], [28, 3, 1, "", "NODE_CONNECTED_EVENT"], [28, 3, 1, "", "PARAMS_RECEIVED_EVENT"], [28, 3, 1, "", "PROCESSED_MESSAGES_EVENT"], [28, 3, 1, "", "ROLE_RECEIVED_EVENT"], [28, 3, 1, "", "SEND_BEAT_EVENT"], [28, 3, 1, "", "SEND_ROLE_EVENT"], [28, 3, 1, "", "START_LEARNING_EVENT"], [28, 3, 1, "", "STOP_LEARNING_EVENT"], [28, 3, 1, "", "TRAIN_SET_VOTE_RECEIVED_EVENT"]], "fedstellar.utils.observer.Observable": [[28, 2, 1, "", "add_observer"], [28, 2, 1, "", "get_observers"], [28, 2, 1, "", "notify"]], "fedstellar.utils.observer.Observer": [[28, 2, 1, "", "update"]], "fedstellar.utils.topologymanager": [[29, 1, 1, "", "TopologyManager"]], "fedstellar.utils.topologymanager.TopologyManager": [[29, 2, 1, "", "add_nodes"], [29, 2, 1, "", "draw_graph"], [29, 2, 1, "", "generate_custom_topology"], [29, 2, 1, "", "generate_ring_topology"], [29, 2, 1, "", "generate_topology"], [29, 2, 1, "", "get_neighbors"], [29, 2, 1, "", "get_neighbors_string"], [29, 2, 1, "", "get_node"], [29, 2, 1, "", "get_nodes"], [29, 2, 1, "", "get_topology"]], "test": [[33, 0, 0, "-", "basenode_test"], [34, 0, 0, "-", "controller_test"], [35, 0, 0, "-", "encryption_test"], [36, 0, 0, "-", "learning_test"], [37, 0, 0, "-", "node_test"], [38, 0, 0, "-", "participants_test"], [39, 0, 0, "-", "topologymanager_test"], [40, 0, 0, "-", "utils"]], "test.basenode_test": [[33, 5, 1, "", "four_nodes"], [33, 5, 1, "", "test_bad_msg"], [33, 5, 1, "", "test_connect_invalid_node"], [33, 5, 1, "", "test_full_connected"], [33, 5, 1, "", "test_multimsg"], [33, 5, 1, "", "test_node_abrupt_down"], [33, 5, 1, "", "test_node_paring"], [33, 5, 1, "", "test_non_full_connected"], [33, 5, 1, "", "two_nodes"]], "test.controller_test": [[34, 5, 1, "", "test_env"], [34, 5, 1, "", "test_mender_deploy_artifact"], [34, 5, 1, "", "test_mender_get_artifacts"], [34, 5, 1, "", "test_mender_get_connected_device"], [34, 5, 1, "", "test_mender_get_info_deployment"], [34, 5, 1, "", "test_mender_get_info_device"], [34, 5, 1, "", "test_mender_get_users"], [34, 5, 1, "", "test_mender_upload_artifact"]], "test.encryption_test": [[35, 5, 1, "", "test_aes_encryption_decription1"], [35, 5, 1, "", "test_aes_encryption_decription2"], [35, 5, 1, "", "test_aes_encryption_decription_model"], [35, 5, 1, "", "test_rsa_encryption_decription1"], [35, 5, 1, "", "test_rsa_encryption_decription2"]], "test.learning_test": [[36, 5, 1, "", "test_avg_complex"], [36, 5, 1, "", "test_avg_simple"], [36, 5, 1, "", "test_encoding"]], "test.node_test": [[37, 5, 1, "", "four_nodes"], [37, 5, 1, "", "test_bad_binary_model"], [37, 5, 1, "", "test_connect_while_training"], [37, 5, 1, "", "test_convergence"], [37, 5, 1, "", "test_encrypted_convergence"], [37, 5, 1, "", "test_interrupt_train"], [37, 5, 1, "", "test_line_network_learning"], [37, 5, 1, "", "test_node_down_on_learning"], [37, 5, 1, "", "test_ring_network_learning"], [37, 5, 1, "", "test_star_network_learning"], [37, 5, 1, "", "test_wrong_model"], [37, 5, 1, "", "two_nodes"]], "test.participants_test": [[38, 5, 1, "", "test_check_gpu"], [38, 5, 1, "", "test_yaml_file"]], "test.topologymanager_test": [[39, 5, 1, "", "test_ring_topology"], [39, 5, 1, "", "test_ring_topology2"], [39, 5, 1, "", "test_topology"], [39, 5, 1, "", "test_topology_6"], [39, 5, 1, "", "test_topology_centralized"]], "test.utils": [[40, 5, 1, "", "check_equal_models"], [40, 5, 1, "", "set_test_settings"], [40, 5, 1, "", "wait_4_results"], [40, 5, 1, "", "wait_network_nodes"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"fedstellar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], "packag": [0, 4, 10, 11, 16, 18, 20, 26, 32], "subpackag": [0, 10, 16, 18], "submodul": [0, 4, 10, 11, 16, 18, 20, 26, 32], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40], "content": [0, 4, 10, 11, 16, 18, 20, 26, 30, 32], "base_nod": 1, "command": 2, "communication_protocol": 3, "config": [4, 5, 6], "mender": 6, "encrypt": 7, "gossip": 8, "heartbeat": 9, "learn": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "aggreg": [11, 12, 13], "fedavg": 13, "except": 14, "learner": 15, "pytorch": [16, 17, 18, 19, 20, 21, 22], "lightninglearn": 17, "mnist_exampl": [18, 19, 20, 21, 22], "mnistfederated_dm": 19, "model": [20, 21, 22], "cnn": 21, "mlp": 22, "node": 23, "node_connect": 24, "role": 25, "util": [26, 27, 28, 29, 40], "env": 27, "observ": 28, "topologymanag": 29, "test": [32, 33, 34, 35, 36, 37, 38, 39, 40], "basenode_test": 33, "controller_test": 34, "encryption_test": 35, "learning_test": 36, "node_test": 37, "participants_test": 38, "topologymanager_test": 39}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"fedstellar package": [[0, "fedstellar-package"]], "Subpackages": [[0, "subpackages"], [10, "subpackages"], [16, "subpackages"], [18, "subpackages"]], "Submodules": [[0, "submodules"], [4, "submodules"], [10, "submodules"], [11, "submodules"], [16, "submodules"], [18, "submodules"], [20, "submodules"], [26, "submodules"], [32, "submodules"]], "Module contents": [[0, "module-fedstellar"], [4, "module-fedstellar.config"], [10, "module-fedstellar.learning"], [11, "module-fedstellar.learning.aggregators"], [16, "module-fedstellar.learning.pytorch"], [18, "module-fedstellar.learning.pytorch.mnist_examples"], [20, "module-fedstellar.learning.pytorch.mnist_examples.models"], [26, "module-fedstellar.utils"], [32, "module-test"]], "fedstellar.base_node module": [[1, "module-fedstellar.base_node"]], "fedstellar.command module": [[2, "module-fedstellar.command"]], "fedstellar.communication_protocol module": [[3, "module-fedstellar.communication_protocol"]], "fedstellar.config package": [[4, "fedstellar-config-package"]], "fedstellar.config.config module": [[5, "module-fedstellar.config.config"]], "fedstellar.config.mender module": [[6, "module-fedstellar.config.mender"]], "fedstellar.encrypter module": [[7, "module-fedstellar.encrypter"]], "fedstellar.gossiper module": [[8, "module-fedstellar.gossiper"]], "fedstellar.heartbeater module": [[9, "module-fedstellar.heartbeater"]], "fedstellar.learning package": [[10, "fedstellar-learning-package"]], "fedstellar.learning.aggregators package": [[11, "fedstellar-learning-aggregators-package"]], "fedstellar.learning.aggregators.aggregator module": [[12, "module-fedstellar.learning.aggregators.aggregator"]], "fedstellar.learning.aggregators.fedavg module": [[13, "module-fedstellar.learning.aggregators.fedavg"]], "fedstellar.learning.exceptions module": [[14, "module-fedstellar.learning.exceptions"]], "fedstellar.learning.learner module": [[15, "module-fedstellar.learning.learner"]], "fedstellar.learning.pytorch package": [[16, "fedstellar-learning-pytorch-package"]], "fedstellar.learning.pytorch.lightninglearner module": [[17, "module-fedstellar.learning.pytorch.lightninglearner"]], "fedstellar.learning.pytorch.mnist_examples package": [[18, "fedstellar-learning-pytorch-mnist-examples-package"]], "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm module": [[19, "module-fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm"]], "fedstellar.learning.pytorch.mnist_examples.models package": [[20, "fedstellar-learning-pytorch-mnist-examples-models-package"]], "fedstellar.learning.pytorch.mnist_examples.models.cnn module": [[21, "module-fedstellar.learning.pytorch.mnist_examples.models.cnn"]], "fedstellar.learning.pytorch.mnist_examples.models.mlp module": [[22, "module-fedstellar.learning.pytorch.mnist_examples.models.mlp"]], "fedstellar.node module": [[23, "module-fedstellar.node"]], "fedstellar.node_connection module": [[24, "module-fedstellar.node_connection"]], "fedstellar.role module": [[25, "module-fedstellar.role"]], "fedstellar.utils package": [[26, "fedstellar-utils-package"]], "fedstellar.utils.env module": [[27, "module-fedstellar.utils.env"]], "fedstellar.utils.observer module": [[28, "module-fedstellar.utils.observer"]], "fedstellar.utils.topologymanager module": [[29, "module-fedstellar.utils.topologymanager"]], "Contents:": [[30, null]], "fedstellar": [[31, "fedstellar"]], "test package": [[32, "test-package"]], "test.basenode_test module": [[33, "module-test.basenode_test"]], "test.controller_test module": [[34, "module-test.controller_test"]], "test.encryption_test module": [[35, "module-test.encryption_test"]], "test.learning_test module": [[36, "module-test.learning_test"]], "test.node_test module": [[37, "module-test.node_test"]], "test.participants_test module": [[38, "module-test.participants_test"]], "test.topologymanager_test module": [[39, "module-test.topologymanager_test"]], "test.utils module": [[40, "module-test.utils"]]}, "indexentries": {"fedstellar": [[0, "module-fedstellar"]], "module": [[0, "module-fedstellar"], [1, "module-fedstellar.base_node"], [2, "module-fedstellar.command"], [3, "module-fedstellar.communication_protocol"], [4, "module-fedstellar.config"], [5, "module-fedstellar.config.config"], [6, "module-fedstellar.config.mender"], [7, "module-fedstellar.encrypter"], [8, "module-fedstellar.gossiper"], [9, "module-fedstellar.heartbeater"], [10, "module-fedstellar.learning"], [11, "module-fedstellar.learning.aggregators"], [12, "module-fedstellar.learning.aggregators.aggregator"], [13, "module-fedstellar.learning.aggregators.fedavg"], [14, "module-fedstellar.learning.exceptions"], [15, "module-fedstellar.learning.learner"], [16, "module-fedstellar.learning.pytorch"], [17, "module-fedstellar.learning.pytorch.lightninglearner"], [18, "module-fedstellar.learning.pytorch.mnist_examples"], [19, "module-fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm"], [20, "module-fedstellar.learning.pytorch.mnist_examples.models"], [21, "module-fedstellar.learning.pytorch.mnist_examples.models.cnn"], [22, "module-fedstellar.learning.pytorch.mnist_examples.models.mlp"], [23, "module-fedstellar.node"], [24, "module-fedstellar.node_connection"], [25, "module-fedstellar.role"], [26, "module-fedstellar.utils"], [27, "module-fedstellar.utils.env"], [28, "module-fedstellar.utils.observer"], [29, "module-fedstellar.utils.topologymanager"], [32, "module-test"], [33, "module-test.basenode_test"], [34, "module-test.controller_test"], [35, "module-test.encryption_test"], [36, "module-test.learning_test"], [37, "module-test.node_test"], [38, "module-test.participants_test"], [39, "module-test.topologymanager_test"], [40, "module-test.utils"]], "basenode (class in fedstellar.base_node)": [[1, "fedstellar.base_node.BaseNode"]], "broadcast() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.broadcast"]], "connect_to() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.connect_to"]], "disconnect_from() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.disconnect_from"]], "fedstellar.base_node": [[1, "module-fedstellar.base_node"]], "get_addr() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.get_addr"]], "get_name() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.get_name"]], "get_neighbor() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.get_neighbor"]], "get_neighbors() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.get_neighbors"]], "get_network_nodes() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.get_network_nodes"]], "gossiper (fedstellar.base_node.basenode attribute)": [[1, "fedstellar.base_node.BaseNode.gossiper"]], "heartbeater (fedstellar.base_node.basenode attribute)": [[1, "fedstellar.base_node.BaseNode.heartbeater"]], "host (fedstellar.base_node.basenode attribute)": [[1, "fedstellar.base_node.BaseNode.host"]], "port (fedstellar.base_node.basenode attribute)": [[1, "fedstellar.base_node.BaseNode.port"]], "rm_neighbor() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.rm_neighbor"]], "run() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.run"]], "setup_logging() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.setup_logging"]], "simulation (fedstellar.base_node.basenode attribute)": [[1, "fedstellar.base_node.BaseNode.simulation"]], "start() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.start"]], "stop() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.stop"]], "update() (fedstellar.base_node.basenode method)": [[1, "fedstellar.base_node.BaseNode.update"]], "beat_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Beat_cmd"]], "command (class in fedstellar.command)": [[2, "fedstellar.command.Command"]], "conn_to_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Conn_to_cmd"]], "metrics_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Metrics_cmd"]], "model_initialized_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Model_initialized_cmd"]], "models_ready_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Models_Ready_cmd"]], "models_aggregated_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Models_aggregated_cmd"]], "params_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Params_cmd"]], "role_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Role_cmd"]], "start_learning_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Start_learning_cmd"]], "stop_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Stop_cmd"]], "stop_learning_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Stop_learning_cmd"]], "vote_train_set_cmd (class in fedstellar.command)": [[2, "fedstellar.command.Vote_train_set_cmd"]], "execute() (fedstellar.command.beat_cmd method)": [[2, "fedstellar.command.Beat_cmd.execute"]], "execute() (fedstellar.command.command method)": [[2, "fedstellar.command.Command.execute"]], "execute() (fedstellar.command.conn_to_cmd method)": [[2, "fedstellar.command.Conn_to_cmd.execute"]], "execute() (fedstellar.command.metrics_cmd method)": [[2, "fedstellar.command.Metrics_cmd.execute"]], "execute() (fedstellar.command.model_initialized_cmd method)": [[2, "fedstellar.command.Model_initialized_cmd.execute"]], "execute() (fedstellar.command.models_ready_cmd method)": [[2, "fedstellar.command.Models_Ready_cmd.execute"]], "execute() (fedstellar.command.models_aggregated_cmd method)": [[2, "fedstellar.command.Models_aggregated_cmd.execute"]], "execute() (fedstellar.command.params_cmd method)": [[2, "fedstellar.command.Params_cmd.execute"]], "execute() (fedstellar.command.role_cmd method)": [[2, "fedstellar.command.Role_cmd.execute"]], "execute() (fedstellar.command.start_learning_cmd method)": [[2, "fedstellar.command.Start_learning_cmd.execute"]], "execute() (fedstellar.command.stop_cmd method)": [[2, "fedstellar.command.Stop_cmd.execute"]], "execute() (fedstellar.command.stop_learning_cmd method)": [[2, "fedstellar.command.Stop_learning_cmd.execute"]], "execute() (fedstellar.command.vote_train_set_cmd method)": [[2, "fedstellar.command.Vote_train_set_cmd.execute"]], "fedstellar.command": [[2, "module-fedstellar.command"]], "beat (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.BEAT"]], "conn (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.CONN"]], "conn_to (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.CONN_TO"]], "communicationprotocol (class in fedstellar.communication_protocol)": [[3, "fedstellar.communication_protocol.CommunicationProtocol"]], "metrics (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.METRICS"]], "models_aggregated (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.MODELS_AGGREGATED"]], "models_aggregated_close (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.MODELS_AGGREGATED_CLOSE"]], "models_ready (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.MODELS_READY"]], "model_initialized (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.MODEL_INITIALIZED"]], "params (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.PARAMS"]], "params_close (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.PARAMS_CLOSE"]], "role (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.ROLE"]], "start_learning (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.START_LEARNING"]], "stop (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.STOP"]], "stop_learning (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.STOP_LEARNING"]], "vote_train_set (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.VOTE_TRAIN_SET"]], "vote_train_set_close (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.VOTE_TRAIN_SET_CLOSE"]], "add_processed_messages() (fedstellar.communication_protocol.communicationprotocol method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.add_processed_messages"]], "build_beat_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_beat_msg"]], "build_connect_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_connect_msg"]], "build_connect_to_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_connect_to_msg"]], "build_metrics_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_metrics_msg"]], "build_model_initialized_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_model_initialized_msg"]], "build_models_aggregated_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_models_aggregated_msg"]], "build_models_ready_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_models_ready_msg"]], "build_params_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_params_msg"]], "build_role_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_role_msg"]], "build_start_learning_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_start_learning_msg"]], "build_stop_learning_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_stop_learning_msg"]], "build_stop_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_stop_msg"]], "build_vote_train_set_msg() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.build_vote_train_set_msg"]], "check_collapse() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.check_collapse"]], "check_params_incomplete() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.check_params_incomplete"]], "command_dict (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.command_dict"]], "fedstellar.communication_protocol": [[3, "module-fedstellar.communication_protocol"]], "generate_hased_message() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.generate_hased_message"]], "last_messages (fedstellar.communication_protocol.communicationprotocol attribute)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.last_messages"]], "process_connection() (fedstellar.communication_protocol.communicationprotocol static method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.process_connection"]], "process_message() (fedstellar.communication_protocol.communicationprotocol method)": [[3, "fedstellar.communication_protocol.CommunicationProtocol.process_message"]], "fedstellar.config": [[4, "module-fedstellar.config"]], "config (class in fedstellar.config.config)": [[5, "fedstellar.config.config.Config"]], "fedstellar.config.config": [[5, "module-fedstellar.config.config"]], "get_participant_config() (fedstellar.config.config.config method)": [[5, "fedstellar.config.config.Config.get_participant_config"]], "get_topology_config() (fedstellar.config.config.config method)": [[5, "fedstellar.config.config.Config.get_topology_config"]], "participant_config (fedstellar.config.config.config attribute)": [[5, "fedstellar.config.config.Config.participant_config"]], "topology_config (fedstellar.config.config.config attribute)": [[5, "fedstellar.config.config.Config.topology_config"]], "mender (class in fedstellar.config.mender)": [[6, "fedstellar.config.mender.Mender"]], "deploy_artifact_device() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.deploy_artifact_device"]], "deploy_artifact_list() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.deploy_artifact_list"]], "fedstellar.config.mender": [[6, "module-fedstellar.config.mender"]], "generate_artifact() (fedstellar.config.mender.mender static method)": [[6, "fedstellar.config.mender.Mender.generate_artifact"]], "get_artifacts() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.get_artifacts"]], "get_connected_device() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.get_connected_device"]], "get_devices() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.get_devices"]], "get_devices_by_group() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.get_devices_by_group"]], "get_info_deployment() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.get_info_deployment"]], "get_info_device() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.get_info_device"]], "get_my_info() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.get_my_info"]], "get_token() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.get_token"]], "renew_token() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.renew_token"]], "upload_artifact() (fedstellar.config.mender.mender method)": [[6, "fedstellar.config.mender.Mender.upload_artifact"]], "aescipher (class in fedstellar.encrypter)": [[7, "fedstellar.encrypter.AESCipher"]], "encrypter (class in fedstellar.encrypter)": [[7, "fedstellar.encrypter.Encrypter"]], "rsacipher (class in fedstellar.encrypter)": [[7, "fedstellar.encrypter.RSACipher"]], "add_padding() (fedstellar.encrypter.aescipher method)": [[7, "fedstellar.encrypter.AESCipher.add_padding"]], "decrypt() (fedstellar.encrypter.aescipher method)": [[7, "fedstellar.encrypter.AESCipher.decrypt"]], "decrypt() (fedstellar.encrypter.encrypter method)": [[7, "fedstellar.encrypter.Encrypter.decrypt"]], "decrypt() (fedstellar.encrypter.rsacipher method)": [[7, "fedstellar.encrypter.RSACipher.decrypt"]], "encrypt() (fedstellar.encrypter.aescipher method)": [[7, "fedstellar.encrypter.AESCipher.encrypt"]], "encrypt() (fedstellar.encrypter.encrypter method)": [[7, "fedstellar.encrypter.Encrypter.encrypt"]], "encrypt() (fedstellar.encrypter.rsacipher method)": [[7, "fedstellar.encrypter.RSACipher.encrypt"]], "fedstellar.encrypter": [[7, "module-fedstellar.encrypter"]], "get_block_size() (fedstellar.encrypter.aescipher static method)": [[7, "fedstellar.encrypter.AESCipher.get_block_size"]], "get_key() (fedstellar.encrypter.aescipher method)": [[7, "fedstellar.encrypter.AESCipher.get_key"]], "get_key() (fedstellar.encrypter.encrypter method)": [[7, "fedstellar.encrypter.Encrypter.get_key"]], "get_key() (fedstellar.encrypter.rsacipher method)": [[7, "fedstellar.encrypter.RSACipher.get_key"]], "key_len() (fedstellar.encrypter.aescipher static method)": [[7, "fedstellar.encrypter.AESCipher.key_len"]], "load_pair_public_key() (fedstellar.encrypter.rsacipher method)": [[7, "fedstellar.encrypter.RSACipher.load_pair_public_key"]], "gossiper (class in fedstellar.gossiper)": [[8, "fedstellar.gossiper.Gossiper"]], "add_messages() (fedstellar.gossiper.gossiper method)": [[8, "fedstellar.gossiper.Gossiper.add_messages"]], "fedstellar.gossiper": [[8, "module-fedstellar.gossiper"]], "run() (fedstellar.gossiper.gossiper method)": [[8, "fedstellar.gossiper.Gossiper.run"]], "stop() (fedstellar.gossiper.gossiper method)": [[8, "fedstellar.gossiper.Gossiper.stop"]], "heartbeater (class in fedstellar.heartbeater)": [[9, "fedstellar.heartbeater.Heartbeater"]], "add_node() (fedstellar.heartbeater.heartbeater method)": [[9, "fedstellar.heartbeater.Heartbeater.add_node"]], "add_node_role() (fedstellar.heartbeater.heartbeater method)": [[9, "fedstellar.heartbeater.Heartbeater.add_node_role"]], "clear_nodes() (fedstellar.heartbeater.heartbeater method)": [[9, "fedstellar.heartbeater.Heartbeater.clear_nodes"]], "fedstellar.heartbeater": [[9, "module-fedstellar.heartbeater"]], "get_nodes() (fedstellar.heartbeater.heartbeater method)": [[9, "fedstellar.heartbeater.Heartbeater.get_nodes"]], "run() (fedstellar.heartbeater.heartbeater method)": [[9, "fedstellar.heartbeater.Heartbeater.run"]], "stop() (fedstellar.heartbeater.heartbeater method)": [[9, "fedstellar.heartbeater.Heartbeater.stop"]], "fedstellar.learning": [[10, "module-fedstellar.learning"]], "fedstellar.learning.aggregators": [[11, "module-fedstellar.learning.aggregators"]], "aggregator (class in fedstellar.learning.aggregators.aggregator)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator"]], "add_model() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator.add_model"]], "aggregate() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator.aggregate"]], "check_and_run_aggregation() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator.check_and_run_aggregation"]], "clear() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator.clear"]], "fedstellar.learning.aggregators.aggregator": [[12, "module-fedstellar.learning.aggregators.aggregator"]], "get_partial_aggregation() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator.get_partial_aggregation"]], "run() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator.run"]], "set_nodes_to_aggregate() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator.set_nodes_to_aggregate"]], "set_waiting_aggregated_model() (fedstellar.learning.aggregators.aggregator.aggregator method)": [[12, "fedstellar.learning.aggregators.aggregator.Aggregator.set_waiting_aggregated_model"]], "fedavg (class in fedstellar.learning.aggregators.fedavg)": [[13, "fedstellar.learning.aggregators.fedavg.FedAvg"]], "aggregate() (fedstellar.learning.aggregators.fedavg.fedavg method)": [[13, "fedstellar.learning.aggregators.fedavg.FedAvg.aggregate"]], "fedstellar.learning.aggregators.fedavg": [[13, "module-fedstellar.learning.aggregators.fedavg"]], "decodingparamserror": [[14, "fedstellar.learning.exceptions.DecodingParamsError"]], "modelnotmatchingerror": [[14, "fedstellar.learning.exceptions.ModelNotMatchingError"]], "fedstellar.learning.exceptions": [[14, "module-fedstellar.learning.exceptions"]], "nodelearner (class in fedstellar.learning.learner)": [[15, "fedstellar.learning.learner.NodeLearner"]], "check_parameters() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.check_parameters"]], "close() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.close"]], "create_trainer() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.create_trainer"]], "decode_parameters() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.decode_parameters"]], "encode_parameters() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.encode_parameters"]], "evaluate() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.evaluate"]], "fedstellar.learning.learner": [[15, "module-fedstellar.learning.learner"]], "finalize_round() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.finalize_round"]], "fit() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.fit"]], "get_num_samples() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.get_num_samples"]], "get_parameters() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.get_parameters"]], "init() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.init"]], "interrupt_fit() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.interrupt_fit"]], "log_validation_metrics() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.log_validation_metrics"]], "set_data() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.set_data"]], "set_epochs() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.set_epochs"]], "set_model() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.set_model"]], "set_parameters() (fedstellar.learning.learner.nodelearner method)": [[15, "fedstellar.learning.learner.NodeLearner.set_parameters"]], "fedstellar.learning.pytorch": [[16, "module-fedstellar.learning.pytorch"]], "lightninglearner (class in fedstellar.learning.pytorch.lightninglearner)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner"]], "check_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.check_parameters"]], "close() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.close"]], "create_trainer() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.create_trainer"]], "decode_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.decode_parameters"]], "encode_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.encode_parameters"]], "evaluate() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.evaluate"]], "fedstellar.learning.pytorch.lightninglearner": [[17, "module-fedstellar.learning.pytorch.lightninglearner"]], "finalize_round() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.finalize_round"]], "fit() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.fit"]], "get_num_samples() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.get_num_samples"]], "get_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.get_parameters"]], "init() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.init"]], "interrupt_fit() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.interrupt_fit"]], "log_validation_metrics() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.log_validation_metrics"]], "set_data() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.set_data"]], "set_epochs() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.set_epochs"]], "set_model() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.set_model"]], "set_parameters() (fedstellar.learning.pytorch.lightninglearner.lightninglearner method)": [[17, "fedstellar.learning.pytorch.lightninglearner.LightningLearner.set_parameters"]], "fedstellar.learning.pytorch.mnist_examples": [[18, "module-fedstellar.learning.pytorch.mnist_examples"]], "mnistfederateddm (class in fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm)": [[19, "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM"]], "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm": [[19, "module-fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm"]], "mnist_train (fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm attribute)": [[19, "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.mnist_train"]], "mnist_val (fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm attribute)": [[19, "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.mnist_val"]], "test_dataloader() (fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm method)": [[19, "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.test_dataloader"]], "train_dataloader() (fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm method)": [[19, "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.train_dataloader"]], "val_dataloader() (fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.mnistfederateddm method)": [[19, "fedstellar.learning.pytorch.mnist_examples.mnistfederated_dm.MnistFederatedDM.val_dataloader"]], "fedstellar.learning.pytorch.mnist_examples.models": [[20, "module-fedstellar.learning.pytorch.mnist_examples.models"]], "cnn (class in fedstellar.learning.pytorch.mnist_examples.models.cnn)": [[21, "fedstellar.learning.pytorch.mnist_examples.models.cnn.CNN"]], "configure_optimizers() (fedstellar.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[21, "fedstellar.learning.pytorch.mnist_examples.models.cnn.CNN.configure_optimizers"]], "fedstellar.learning.pytorch.mnist_examples.models.cnn": [[21, "module-fedstellar.learning.pytorch.mnist_examples.models.cnn"]], "forward() (fedstellar.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[21, "fedstellar.learning.pytorch.mnist_examples.models.cnn.CNN.forward"]], "test_step() (fedstellar.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[21, "fedstellar.learning.pytorch.mnist_examples.models.cnn.CNN.test_step"]], "training (fedstellar.learning.pytorch.mnist_examples.models.cnn.cnn attribute)": [[21, "fedstellar.learning.pytorch.mnist_examples.models.cnn.CNN.training"]], "training_step() (fedstellar.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[21, "fedstellar.learning.pytorch.mnist_examples.models.cnn.CNN.training_step"]], "validation_step() (fedstellar.learning.pytorch.mnist_examples.models.cnn.cnn method)": [[21, "fedstellar.learning.pytorch.mnist_examples.models.cnn.CNN.validation_step"]], "mlp (class in fedstellar.learning.pytorch.mnist_examples.models.mlp)": [[22, "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP"]], "configure_optimizers() (fedstellar.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[22, "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP.configure_optimizers"]], "fedstellar.learning.pytorch.mnist_examples.models.mlp": [[22, "module-fedstellar.learning.pytorch.mnist_examples.models.mlp"]], "forward() (fedstellar.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[22, "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP.forward"]], "test_step() (fedstellar.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[22, "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP.test_step"]], "training (fedstellar.learning.pytorch.mnist_examples.models.mlp.mlp attribute)": [[22, "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP.training"]], "training_epoch_end() (fedstellar.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[22, "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP.training_epoch_end"]], "training_step() (fedstellar.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[22, "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP.training_step"]], "validation_step() (fedstellar.learning.pytorch.mnist_examples.models.mlp.mlp method)": [[22, "fedstellar.learning.pytorch.mnist_examples.models.mlp.MLP.validation_step"]], "node (class in fedstellar.node)": [[23, "fedstellar.node.Node"]], "add_model() (fedstellar.node.node method)": [[23, "fedstellar.node.Node.add_model"]], "aggregator (fedstellar.node.node attribute)": [[23, "fedstellar.node.Node.aggregator"]], "connect_to() (fedstellar.node.node method)": [[23, "fedstellar.node.Node.connect_to"]], "fedstellar.node": [[23, "module-fedstellar.node"]], "learner (fedstellar.node.node attribute)": [[23, "fedstellar.node.Node.learner"]], "round (fedstellar.node.node attribute)": [[23, "fedstellar.node.Node.round"]], "set_data() (fedstellar.node.node method)": [[23, "fedstellar.node.Node.set_data"]], "set_model() (fedstellar.node.node method)": [[23, "fedstellar.node.Node.set_model"]], "set_start_learning() (fedstellar.node.node method)": [[23, "fedstellar.node.Node.set_start_learning"]], "set_stop_learning() (fedstellar.node.node method)": [[23, "fedstellar.node.Node.set_stop_learning"]], "stop() (fedstellar.node.node method)": [[23, "fedstellar.node.Node.stop"]], "totalrounds (fedstellar.node.node attribute)": [[23, "fedstellar.node.Node.totalrounds"]], "update() (fedstellar.node.node method)": [[23, "fedstellar.node.Node.update"]], "nodeconnection (class in fedstellar.node_connection)": [[24, "fedstellar.node_connection.NodeConnection"]], "add_models_aggregated() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.add_models_aggregated"]], "add_param_segment() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.add_param_segment"]], "add_processed_messages() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.add_processed_messages"]], "clear_buffer() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.clear_buffer"]], "clear_models_aggregated() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.clear_models_aggregated"]], "fedstellar.node_connection": [[24, "module-fedstellar.node_connection"]], "get_addr() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.get_addr"]], "get_model_initialized() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.get_model_initialized"]], "get_model_ready_status() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.get_model_ready_status"]], "get_models_aggregated() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.get_models_aggregated"]], "get_name() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.get_name"]], "get_params() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.get_params"]], "notify_conn_to() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.notify_conn_to"]], "notify_heartbeat() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.notify_heartbeat"]], "notify_metrics() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.notify_metrics"]], "notify_params() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.notify_params"]], "notify_role() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.notify_role"]], "notify_start_learning() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.notify_start_learning"]], "notify_stop_learning() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.notify_stop_learning"]], "notify_train_set_votes() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.notify_train_set_votes"]], "run() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.run"]], "send() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.send"]], "set_model_initialized() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.set_model_initialized"]], "set_model_ready_status() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.set_model_ready_status"]], "start() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.start"]], "stop() (fedstellar.node_connection.nodeconnection method)": [[24, "fedstellar.node_connection.NodeConnection.stop"]], "aggregator (fedstellar.role.role attribute)": [[25, "fedstellar.role.Role.AGGREGATOR"]], "idle (fedstellar.role.role attribute)": [[25, "fedstellar.role.Role.IDLE"]], "proxy (fedstellar.role.role attribute)": [[25, "fedstellar.role.Role.PROXY"]], "role (class in fedstellar.role)": [[25, "fedstellar.role.Role"]], "server (fedstellar.role.role attribute)": [[25, "fedstellar.role.Role.SERVER"]], "trainer (fedstellar.role.role attribute)": [[25, "fedstellar.role.Role.TRAINER"]], "fedstellar.role": [[25, "module-fedstellar.role"]], "fedstellar.utils": [[26, "module-fedstellar.utils"]], "collect_env() (in module fedstellar.utils.env)": [[27, "fedstellar.utils.env.collect_env"]], "fedstellar.utils.env": [[27, "module-fedstellar.utils.env"]], "aggregation_finished_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.AGGREGATION_FINISHED_EVENT"]], "beat_received_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.BEAT_RECEIVED_EVENT"]], "conn_to_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.CONN_TO_EVENT"]], "end_connection_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.END_CONNECTION_EVENT"]], "events (class in fedstellar.utils.observer)": [[28, "fedstellar.utils.observer.Events"]], "gossip_broadcast_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.GOSSIP_BROADCAST_EVENT"]], "metrics_received_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.METRICS_RECEIVED_EVENT"]], "node_connected_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.NODE_CONNECTED_EVENT"]], "observable (class in fedstellar.utils.observer)": [[28, "fedstellar.utils.observer.Observable"]], "observer (class in fedstellar.utils.observer)": [[28, "fedstellar.utils.observer.Observer"]], "params_received_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.PARAMS_RECEIVED_EVENT"]], "processed_messages_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.PROCESSED_MESSAGES_EVENT"]], "role_received_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.ROLE_RECEIVED_EVENT"]], "send_beat_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.SEND_BEAT_EVENT"]], "send_role_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.SEND_ROLE_EVENT"]], "start_learning_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.START_LEARNING_EVENT"]], "stop_learning_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.STOP_LEARNING_EVENT"]], "train_set_vote_received_event (fedstellar.utils.observer.events attribute)": [[28, "fedstellar.utils.observer.Events.TRAIN_SET_VOTE_RECEIVED_EVENT"]], "add_observer() (fedstellar.utils.observer.observable method)": [[28, "fedstellar.utils.observer.Observable.add_observer"]], "fedstellar.utils.observer": [[28, "module-fedstellar.utils.observer"]], "get_observers() (fedstellar.utils.observer.observable method)": [[28, "fedstellar.utils.observer.Observable.get_observers"]], "notify() (fedstellar.utils.observer.observable method)": [[28, "fedstellar.utils.observer.Observable.notify"]], "update() (fedstellar.utils.observer.observer method)": [[28, "fedstellar.utils.observer.Observer.update"]], "topologymanager (class in fedstellar.utils.topologymanager)": [[29, "fedstellar.utils.topologymanager.TopologyManager"]], "add_nodes() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.add_nodes"]], "draw_graph() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.draw_graph"]], "fedstellar.utils.topologymanager": [[29, "module-fedstellar.utils.topologymanager"]], "generate_custom_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.generate_custom_topology"]], "generate_ring_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.generate_ring_topology"]], "generate_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.generate_topology"]], "get_neighbors() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.get_neighbors"]], "get_neighbors_string() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.get_neighbors_string"]], "get_node() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.get_node"]], "get_nodes() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.get_nodes"]], "get_topology() (fedstellar.utils.topologymanager.topologymanager method)": [[29, "fedstellar.utils.topologymanager.TopologyManager.get_topology"]], "test": [[32, "module-test"]], "four_nodes() (in module test.basenode_test)": [[33, "test.basenode_test.four_nodes"]], "test.basenode_test": [[33, "module-test.basenode_test"]], "test_bad_msg() (in module test.basenode_test)": [[33, "test.basenode_test.test_bad_msg"]], "test_connect_invalid_node() (in module test.basenode_test)": [[33, "test.basenode_test.test_connect_invalid_node"]], "test_full_connected() (in module test.basenode_test)": [[33, "test.basenode_test.test_full_connected"]], "test_multimsg() (in module test.basenode_test)": [[33, "test.basenode_test.test_multimsg"]], "test_node_abrupt_down() (in module test.basenode_test)": [[33, "test.basenode_test.test_node_abrupt_down"]], "test_node_paring() (in module test.basenode_test)": [[33, "test.basenode_test.test_node_paring"]], "test_non_full_connected() (in module test.basenode_test)": [[33, "test.basenode_test.test_non_full_connected"]], "two_nodes() (in module test.basenode_test)": [[33, "test.basenode_test.two_nodes"]], "test.controller_test": [[34, "module-test.controller_test"]], "test_env() (in module test.controller_test)": [[34, "test.controller_test.test_env"]], "test_mender_deploy_artifact() (in module test.controller_test)": [[34, "test.controller_test.test_mender_deploy_artifact"]], "test_mender_get_artifacts() (in module test.controller_test)": [[34, "test.controller_test.test_mender_get_artifacts"]], "test_mender_get_connected_device() (in module test.controller_test)": [[34, "test.controller_test.test_mender_get_connected_device"]], "test_mender_get_info_deployment() (in module test.controller_test)": [[34, "test.controller_test.test_mender_get_info_deployment"]], "test_mender_get_info_device() (in module test.controller_test)": [[34, "test.controller_test.test_mender_get_info_device"]], "test_mender_get_users() (in module test.controller_test)": [[34, "test.controller_test.test_mender_get_users"]], "test_mender_upload_artifact() (in module test.controller_test)": [[34, "test.controller_test.test_mender_upload_artifact"]], "test.encryption_test": [[35, "module-test.encryption_test"]], "test_aes_encryption_decription1() (in module test.encryption_test)": [[35, "test.encryption_test.test_aes_encryption_decription1"]], "test_aes_encryption_decription2() (in module test.encryption_test)": [[35, "test.encryption_test.test_aes_encryption_decription2"]], "test_aes_encryption_decription_model() (in module test.encryption_test)": [[35, "test.encryption_test.test_aes_encryption_decription_model"]], "test_rsa_encryption_decription1() (in module test.encryption_test)": [[35, "test.encryption_test.test_rsa_encryption_decription1"]], "test_rsa_encryption_decription2() (in module test.encryption_test)": [[35, "test.encryption_test.test_rsa_encryption_decription2"]], "test.learning_test": [[36, "module-test.learning_test"]], "test_avg_complex() (in module test.learning_test)": [[36, "test.learning_test.test_avg_complex"]], "test_avg_simple() (in module test.learning_test)": [[36, "test.learning_test.test_avg_simple"]], "test_encoding() (in module test.learning_test)": [[36, "test.learning_test.test_encoding"]], "four_nodes() (in module test.node_test)": [[37, "test.node_test.four_nodes"]], "test.node_test": [[37, "module-test.node_test"]], "test_bad_binary_model() (in module test.node_test)": [[37, "test.node_test.test_bad_binary_model"]], "test_connect_while_training() (in module test.node_test)": [[37, "test.node_test.test_connect_while_training"]], "test_convergence() (in module test.node_test)": [[37, "test.node_test.test_convergence"]], "test_encrypted_convergence() (in module test.node_test)": [[37, "test.node_test.test_encrypted_convergence"]], "test_interrupt_train() (in module test.node_test)": [[37, "test.node_test.test_interrupt_train"]], "test_line_network_learning() (in module test.node_test)": [[37, "test.node_test.test_line_network_learning"]], "test_node_down_on_learning() (in module test.node_test)": [[37, "test.node_test.test_node_down_on_learning"]], "test_ring_network_learning() (in module test.node_test)": [[37, "test.node_test.test_ring_network_learning"]], "test_star_network_learning() (in module test.node_test)": [[37, "test.node_test.test_star_network_learning"]], "test_wrong_model() (in module test.node_test)": [[37, "test.node_test.test_wrong_model"]], "two_nodes() (in module test.node_test)": [[37, "test.node_test.two_nodes"]], "test.participants_test": [[38, "module-test.participants_test"]], "test_check_gpu() (in module test.participants_test)": [[38, "test.participants_test.test_check_gpu"]], "test_yaml_file() (in module test.participants_test)": [[38, "test.participants_test.test_yaml_file"]], "test.topologymanager_test": [[39, "module-test.topologymanager_test"]], "test_ring_topology() (in module test.topologymanager_test)": [[39, "test.topologymanager_test.test_ring_topology"]], "test_ring_topology2() (in module test.topologymanager_test)": [[39, "test.topologymanager_test.test_ring_topology2"]], "test_topology() (in module test.topologymanager_test)": [[39, "test.topologymanager_test.test_topology"]], "test_topology_6() (in module test.topologymanager_test)": [[39, "test.topologymanager_test.test_topology_6"]], "test_topology_centralized() (in module test.topologymanager_test)": [[39, "test.topologymanager_test.test_topology_centralized"]], "check_equal_models() (in module test.utils)": [[40, "test.utils.check_equal_models"]], "set_test_settings() (in module test.utils)": [[40, "test.utils.set_test_settings"]], "test.utils": [[40, "module-test.utils"]], "wait_4_results() (in module test.utils)": [[40, "test.utils.wait_4_results"]], "wait_network_nodes() (in module test.utils)": [[40, "test.utils.wait_network_nodes"]]}})