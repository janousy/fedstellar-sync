:py:mod:`fedstellar.controller`
===============================

.. py:module:: fedstellar.controller


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fedstellar.controller.TermEscapeCodeFormatter
   fedstellar.controller.Controller



Functions
~~~~~~~~~

.. autoapisummary::

   fedstellar.controller.signal_handler



Attributes
~~~~~~~~~~

.. autoapisummary::

   fedstellar.controller.log_console_format
   fedstellar.controller.console_handler


.. py:class:: TermEscapeCodeFormatter(fmt=None, datefmt=None, style='%', validate=True)

   Bases: :py:obj:`logging.Formatter`

   A class to strip the escape codes from the

   .. py:method:: format(record)

      Format the specified record as text.

      The record's attribute dictionary is used as the operand to a
      string formatting operation which yields the returned string.
      Before formatting the dictionary, a couple of preparatory steps
      are carried out. The message attribute of the record is computed
      using LogRecord.getMessage(). If the formatting string uses the
      time (as determined by a call to usesTime(), formatTime() is
      called to format the event time. If there is exception information,
      it is formatted using formatException() and appended to the message.



.. py:data:: log_console_format
   :annotation: = [%(levelname)s] - %(asctime)s - Controller - %(message)s

   

.. py:data:: console_handler
   

   

.. py:function:: signal_handler(sig, frame)


.. py:class:: Controller(args)

   Controller class that manages the nodes

   .. py:method:: start()

      Start the controller


   .. py:method:: run_webserver()


   .. py:method:: run_statistics()


   .. py:method:: killports(term='python')
      :staticmethod:


   .. py:method:: killport(port)
      :staticmethod:


   .. py:method:: killdockers()
      :staticmethod:


   .. py:method:: load_configurations_and_start_nodes()


   .. py:method:: create_topology(matrix=None)


   .. py:method:: start_nodes_docker(idx_start_node)


   .. py:method:: start_node(idx)


   .. py:method:: start_nodes_cmd(idx_start_node)


   .. py:method:: remove_config_files()
      :classmethod:


   .. py:method:: remove_files_by_scenario(scenario_name)
      :classmethod:



